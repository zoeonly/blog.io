<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zoe</title>
  <subtitle>Days are numbered</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-03-05T09:59:25.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zoe</name>
    <email>716202820@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>牧羊少年决定去死</title>
    <link href="http://yoursite.com/2017/03/05/%E7%89%A7%E7%BE%8A%E5%B0%91%E5%B9%B4%E5%86%B3%E5%AE%9A%E5%8E%BB%E6%AD%BB/"/>
    <id>http://yoursite.com/2017/03/05/牧羊少年决定去死/</id>
    <published>2017-03-05T09:43:47.000Z</published>
    <updated>2017-03-05T09:59:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>技术博客是个体力活，而且在输入知识不够系统的情况下很难有高质量输出。<br>现在就是这样一个情况，转眼间快一年没有更新了。<br>那就写写书评好啦。<br>读了好多保罗·柯艾略的书，想到高中挺喜欢他但没什么时间读小说的心愿现在都了了。</p>
<p>牧羊少年的奇幻之旅。<br>高中时就被保罗柯艾略这篇充满暗示和征兆的文章吸引，到现在已经抽出几个小时读完已经是五年之后了，当初天马行空的思想已经不再，看完后对于有些地方还是难免无法正常看待，毕竟化风和理解世界之魂对于我这样的无信仰主义者还是有点虚妄的。<br>少年逃避神甫身份的理由挺有意思的，每天过着可以预见的生活的后果就是，你跟周围的人越熟悉，他们就越想用自己思想的束缚你，所以所有的体验你都将得不到，相反是被慢慢同化。感觉读到这里仿佛就看到了自己，很多人可能一直追求的都是identity，越多人认同成就感越强，为了逃避这样的自我认知我也走过了许多曲路，所幸现在已经认识到了。<br>其余的值得一提的就是人最可怕的不是磨难本身，而是害怕面对磨难的心情。至于爱情不是阻止你成长和追寻自己寻找天命的羁绊，我只想说一句男女通用。<br>最后，希望自己能够觉察到征兆，说起来感觉有点玄乎，但我觉得这就是生命的奇特之处。</p>
<p>维罗尼卡决定去死呢。<br>名字确实显得矫情，看完却觉得有点意思，以我现在的心理状态而言，确实需要疯一点的勇气，疯子的世界和现实世界之间，不一定谁比较正常，掩饰自己的真心所想，按多数人的要求生活，没有不幸，却也不算很幸福。<br>维罗尼卡就像你我某个时候缩影，所幸她在一群疯子中找到了激情。<br>活着是为了什么这个问题是从古至今都被热烈讨论的问题，这本书算是一种解答，即使生活的那些琐碎细节让人麻木，让人冷漠，但总有一丝活力会从中喷涌而出。<br>在这里，它是爱的能力。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;技术博客是个体力活，而且在输入知识不够系统的情况下很难有高质量输出。&lt;br&gt;现在就是这样一个情况，转眼间快一年没有更新了。&lt;br&gt;那就写写书评好啦。&lt;br&gt;读了好多保罗·柯艾略的书，想到高中挺喜欢他但没什么时间读小说的心愿现在都了了。&lt;/p&gt;
&lt;p&gt;牧羊少年的奇幻之旅。&lt;b
    
    </summary>
    
    
      <category term="生活，书评" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB%EF%BC%8C%E4%B9%A6%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>hive安装笔记</title>
    <link href="http://yoursite.com/2016/09/18/hive%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/09/18/hive安装笔记/</id>
    <published>2016-09-18T12:33:35.000Z</published>
    <updated>2016-10-03T03:22:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><ul>
<li>在官网下载apache-hive-2.0.0-bin.tar.gz，采用直接解压缩的形式安装<br>放置到相应目录后修改和配置环境变量<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">vi</span> ~/.bash_profile</div></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> HIVE_HOME=&#123;YOUR OWN PATH&#125;apache-hive-2.0.0</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HIVE_HOME</span>/bin</div></pre></td></tr></table></figure>
<p>之后编译环境变量<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> ~/.bash_profile</div></pre></td></tr></table></figure></p>
<ul>
<li>为了避免可能遇到的问题，将hive下的新版本jline的JAR包替换hadoop根目录hadoop-2.6.0/share/hadoop/yarn/lib下的该jar包,因为Hadoop里面的版本过时。</li>
<li><p>然后配置mysql元数据库</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql.server start</div><div class="line">mysql -uroot #root用户进入mysql</div><div class="line">mysql&gt; <span class="keyword">CREATE</span> DATABASE metastore;</div><div class="line">mysql&gt; USE metastore;</div><div class="line">mysql&gt; <span class="keyword">CREATE</span> USER <span class="string">'hiveuser'</span>@<span class="string">'localhost'</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">'password'</span>;</div><div class="line">mysql&gt; GRANT <span class="keyword">SELECT</span>,INSERT,UPDATE,DELETE,ALTER,<span class="keyword">CREATE</span> <span class="keyword">ON</span> metastore.* <span class="keyword">TO</span> <span class="string">'hiveuser'</span>@<span class="string">'localhost'</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>拷贝生成hive的配置文件,在conf目录下：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cp hive-default<span class="selector-class">.xml</span><span class="selector-class">.template</span> hive-default<span class="selector-class">.xml</span></div><div class="line">cp hive-default<span class="selector-class">.xml</span><span class="selector-class">.template</span> hive-site<span class="selector-class">.xml</span></div><div class="line">cp hive-exec-log4j2<span class="selector-class">.properties</span><span class="selector-class">.template</span> hive-exec-log4j2<span class="selector-class">.properties</span></div><div class="line">cp hive-log4j2<span class="selector-class">.properties</span><span class="selector-class">.template</span> hive-log4j2<span class="selector-class">.properties</span></div><div class="line">cp beeline-log4j2<span class="selector-class">.properties</span><span class="selector-class">.template</span> beeline-log4j2.properties</div></pre></td></tr></table></figure>
</li>
<li><p>在hive-site.xml添加或者编辑如下内容</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://localhost/metastore<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>hiveuser<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>password<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>datanucleus.fixedDatastore<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>测试hive是否工作</p>
<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span> hive;</div><div class="line">hive &gt; show tables;</div><div class="line">hive&gt; create <span class="keyword">table</span> temp_table <span class="comment">temp_col string</span>;</div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="测试过程中遇到以下问题："><a href="#测试过程中遇到以下问题：" class="headerlink" title="测试过程中遇到以下问题："></a>测试过程中遇到以下问题：</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Unable to instantiate org<span class="selector-class">.apache</span><span class="selector-class">.hadoop</span><span class="selector-class">.hive</span><span class="selector-class">.ql</span><span class="selector-class">.metadata</span><span class="selector-class">.SessionHiveMetaStoreClient</span></div></pre></td></tr></table></figure>
<p>解决方法：先启动hive –service metastore &amp;<br>结果出现问题：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">The specified datastore driver (<span class="string">"com.mysql.jdbc.Driver"</span>) was <span class="keyword">not</span> found <span class="keyword">in</span> <span class="keyword">the</span> CLASSPATH</div></pre></td></tr></table></figure></p>
<p>解决方法：在电脑中找到mysql-connector-Java-x.x.x.jar文件复制到hive的lib目录下,再次尝试，发现：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Required table missing : <span class="string">""</span>VERSION<span class="string">""</span> <span class="keyword">in</span> Catalog <span class="string">""</span> Schema <span class="string">""</span>. DataNucleus requires this table <span class="keyword">to</span> perform <span class="keyword">its</span> persistence operations. Either your MetaData <span class="keyword">is</span> incorrect, <span class="keyword">or</span> you need <span class="keyword">to</span> enable <span class="string">"datanucleus.autoCreateTables"</span></div></pre></td></tr></table></figure></p>
<p>解决方法：在hive-site.xml加上<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>datanucleus.autoCreateTables<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>True<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>发现搞定当前问题<br>接着输入hive,还是有问题：<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">java.net.ConnectException:</span> Connection refused<span class="comment">; For more details see:</span></div><div class="line"><span class="symbol">http:</span>//wiki.apache<span class="meta">.org</span>/hadoop/ConnectionRefused</div></pre></td></tr></table></figure></p>
<p>搞不定，试试通过<strong> hive –service cli </strong>命令启动，得到错误<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java.lang.<span class="string">RuntimeException:</span> java.lang.<span class="string">IllegalArgumentException:</span> java.net.<span class="string">URISyntaxException:</span> Relative path <span class="keyword">in</span> absolute <span class="string">URI:</span> $&#123;<span class="string">system:</span>java.io.tmpdir%<span class="number">7</span>D/$%<span class="number">7</span><span class="string">Bsystem:</span>user.name%<span class="number">7</span>D</div></pre></td></tr></table></figure></p>
<p>解决步骤：<br>1.查看hive-site.xml配置，会看到配置值含有”system:java.io.tmpdir”的配置项<br>2.新建文件夹{YOUR OWN PATH}/hive-0.14.0-bin/iotmp<br>3.在hive-site.xml配置里面改完下面三个配置项<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">property</span>&gt;</div><div class="line">  &lt;<span class="built_in">name</span>&gt;hive.exec.<span class="keyword">local</span>.scratchdir&lt;/<span class="built_in">name</span>&gt;</div><div class="line">  &lt;value&gt;$HIVE_HOME/iotmp&lt;/value&gt;</div><div class="line">  &lt;description&gt;Local scratch <span class="literal">space</span> <span class="keyword">for</span> Hive jobs&lt;/description&gt;</div><div class="line">&lt;/<span class="keyword">property</span>&gt;</div><div class="line">&lt;<span class="keyword">property</span>&gt;</div><div class="line">  &lt;<span class="built_in">name</span>&gt;hive.querylog.location&lt;/<span class="built_in">name</span>&gt;</div><div class="line">  &lt;value&gt;$HIVE_HOME/iotmp&lt;/value&gt;</div><div class="line">  &lt;description&gt;Location <span class="keyword">of</span> Hive <span class="built_in">run</span> <span class="built_in">time</span> structured <span class="built_in">log</span> <span class="built_in">file</span>&lt;/description&gt;</div><div class="line">&lt;/<span class="keyword">property</span>&gt;</div><div class="line">&lt;<span class="keyword">property</span>&gt;</div><div class="line">  &lt;<span class="built_in">name</span>&gt;hive.downloaded.resources.dir&lt;/<span class="built_in">name</span>&gt;</div><div class="line">  &lt;value&gt;$HIVE_HOME/iotmp&lt;/value&gt;</div><div class="line">  &lt;description&gt;Temporary <span class="keyword">local</span> directory <span class="keyword">for</span> added resources <span class="keyword">in</span> <span class="keyword">the</span> remote <span class="built_in">file</span> system.&lt;/description&gt;</div><div class="line">&lt;/<span class="keyword">property</span>&gt;</div></pre></td></tr></table></figure></p>
<p>就大功告成了，此时无论输入hive还是hive –service cli都可以妥妥的启动hive cli辣～<br><strong> 实际采用远程接口jdbc,odbc编程比较多，需要先开启远程接口服务：<br>hive -service hiveserver &amp; </strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装步骤&quot;&gt;&lt;a href=&quot;#安装步骤&quot; class=&quot;headerlink&quot; title=&quot;安装步骤&quot;&gt;&lt;/a&gt;安装步骤&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在官网下载apache-hive-2.0.0-bin.tar.gz，采用直接解压缩的形式安装&lt;br&gt;放置到相应目
    
    </summary>
    
    
      <category term="大数据" scheme="http://yoursite.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>影响力</title>
    <link href="http://yoursite.com/2016/04/26/%E5%BD%B1%E5%93%8D%E5%8A%9B/"/>
    <id>http://yoursite.com/2016/04/26/影响力/</id>
    <published>2016-04-26T08:32:35.000Z</published>
    <updated>2016-04-26T08:38:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个星期之内断断续续看完的，觉得这样的书需要慢慢看，因为信息密度有些大，不像小说。主要讲了六个心理陷阱：互惠，社会认同，承诺和一致，喜好，权威，短缺。其实书中所讲的案例或多或少都有经历或听说过，但以这样抽丝剥茧的形式拿出来进行分析还是第一次见，感觉读完有收获<a id="more"></a>，要利用这个提高生活质量还需要多思考，多体会。果然思考make all difference。所以我要在读完后马上强迫自己写体会，这样能马上进去思考的状态，而不是被动接受书中的思想。</p>
<p>互惠的意思是说，人都是接受恩惠后都倾向于要回报，有时候甚至是对于不太喜欢的人，因此很多人就利用人这种思想强迫“施恩”，再索取回报，比如像安利最初就是将产品留在用户家中，让用户随意使用，一段时间后再上门回收，这时候用户就有一种受恩的感觉，因此购买该产品的可能性就会大大增加。同理还有在街上发小礼品的。这一点用于人际交往的意义在于如果你想要别人帮你的忙，在事先先施恩，然后成功的概率会增加，但是需要谨慎的是很多人其实不愿意积累太多人情债，过多施恩会让人感到负担。</p>
<p>社会认同，书中讲了一个与很多年前中国的轰动一时的社会事件类似的事，说明其实所谓的社会冷漠现象可能并不全是因为人们变得没有人情了，而是社会认同在起作用。当多数人认为事情不紧急或者对局势不清楚而采取观望态度时，个人获得帮助的可能性就很低了，因此获取旁观者帮助的最好方法是指定对象，明确需求，营造出一种新的良好的社会认同。同时要警惕社会认同对个人决策的影响，不要落入认同陷阱。</p>
<p>承诺和一致，也是营销人员常用的手段，先提一个小的你不容易或没必要拒绝的要求，接着抛出后面的目的，出于前后一致的理念，人们往往选择将这个理念贯彻到底，即使如果没有先前的承诺后面的要求看起来多么荒诞不经。建议是千万警惕前后的联系，独立思考，不要为了简单的保持一致作出奇怪的决定。</p>
<p>喜好，权威我觉得是增加说服力的有效理论基础，人们偏向于喜欢那些外形好的人，那些和自己有共同点的人，那些看起来（头衔，着装）很权威的人说话的可信度会比较高，这些都是喜好和权威在起作用。因此建立起这种权威的意义也很大。</p>
<p>最后的短缺是一个很显然的道理，害怕失去某样东西比得到同等价值的东西前者对人的影响更大。</p>
<p>还有一些显而易见的道理，比如对比原理，这些是人类在自然进化中先天的一些下意识反应，就像磁带一样，哔嗒自动启动的，如何避免落入哔嗒的陷阱中，要先学会认识它们，进而找到更适合自己的行为方法。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个星期之内断断续续看完的，觉得这样的书需要慢慢看，因为信息密度有些大，不像小说。主要讲了六个心理陷阱：互惠，社会认同，承诺和一致，喜好，权威，短缺。其实书中所讲的案例或多或少都有经历或听说过，但以这样抽丝剥茧的形式拿出来进行分析还是第一次见，感觉读完有收获
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>在Mac10.10.5下安装caffe以及运行mnist数据集</title>
    <link href="http://yoursite.com/2016/03/18/%E5%9C%A8Mac10-10-5%E4%B8%8B%E5%AE%89%E8%A3%85caffe%E4%BB%A5%E5%8F%8A%E8%B7%91%E4%B8%80%E4%B8%8Bmnist%E6%95%B0%E6%8D%AE%E9%9B%86/"/>
    <id>http://yoursite.com/2016/03/18/在Mac10-10-5下安装caffe以及跑一下mnist数据集/</id>
    <published>2016-03-18T09:02:10.000Z</published>
    <updated>2016-03-18T09:40:49.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><p>Macbook pro集显，CPU only，10.10.5<br>主要记录下遇到的问题<br><a href="http://blog.csdn.net/yjn03151111/article/details/46353013" target="_blank" rel="external">主要教程</a><br>教程中掉了一点是底下评论提到的：<br>CMakeLists.txt这个文件里面也有一个关于CPU_ONLY的地方要修改，改成on就可以了<br>照着教程走遇到的2个问题：</p>
<ol>
<li><p>有一个cmake： command not find的问题。<br>解决办法：<br>参考下面视频手动装了cmake 并自己配置了下开启命令行<br><a href="https://www.youtube.com/watch?v=sK4sVg4SRsg" target="_blank" rel="external">装cmake</a></p>
</li>
<li><p>fatal error: ‘cblas.h’ file not found<br>解决办法：<br>根据下面网址自己切到目录下看了下并配置了下路径(比如我的目录就是0.2.15)<br><a href="https://github.com/BVLC/caffe/issues/617" target="_blank" rel="external">配置makefile.config</a><br>即：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">BLAS_INCLUDE :</span>= <span class="regexp">/usr/</span>local<span class="regexp">/Cellar/</span>openblas<span class="regexp">/0.2.15/</span>include</div><div class="line"><span class="string">BLAS_LIB :</span>= <span class="regexp">/usr/</span>local<span class="regexp">/Cellar/</span>openblas<span class="regexp">/0.2.15/</span>lib</div></pre></td></tr></table></figure>
</li>
</ol>
<p>发现还是不行，接着看，说是需預先安裝Xcode及「Command Line Tools］<br>xcode就不想用说了，app store下<br>命令行输入<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ xcode－<span class="keyword">select</span> —<span class="keyword">install</span> //<span class="keyword">install</span> Command Line Tools;</div></pre></td></tr></table></figure></p>
<p>发现还是有问题，接着看到了这个<br><a href="http://stackoverflow.com/questions/35544356/install-caffe-on-mac-error-fatal-error-cblas-h-file-not-found" target="_blank" rel="external">最终解决办法</a><br>即：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">brew <span class="keyword">uninstall</span> openblas; brew <span class="keyword">install</span> <span class="comment">--fresh -vd openblas</span></div><div class="line">cmake -DCMAKE_CXX_FLAGS=-I/usr/<span class="keyword">local</span>/opt/openblas/<span class="keyword">include</span></div></pre></td></tr></table></figure></p>
<p>完美解决</p>
<hr>
<h3 id="训练第一个数据集"><a href="#训练第一个数据集" class="headerlink" title="训练第一个数据集"></a>训练第一个数据集</h3><p><a href="http://www.lupaworld.com/article-250356-1.html" target="_blank" rel="external">这是教程</a></p>
<ol>
<li><p>训练第一个数据集的时候发现wget: command not found<br><a href="http://mikebeach.org/2012/09/29/how-to-install-wget-in-mac-os-x/" target="_blank" rel="external">安装wget</a></p>
</li>
<li><p>运行时发现:cannot use gpu in cpu-only<br><a href="https://github.com/BVLC/caffe/issues/1799" target="_blank" rel="external">改下文件配置</a><br>即在makefile.config中将</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">solver_mode:</span> GPU</div></pre></td></tr></table></figure>
</li>
</ol>
<p>改成<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">solver_mode:</span> GPU</div></pre></td></tr></table></figure></p>
<ol>
<li>生成数据文件lmdb有问题，呵呵了，发现了大问题，<strong>build文件夹是个空的</strong>，正常文件夹貌似应该有很多东西<br>翻遍了各种论坛没有找到解决办法，最后本人强行将examples和tools等5个文件夹复制到了build中，就不报错了，可以训练一下数据.（有一点需要注意的是执行sh文件的时候最好从根目录执行，不然也会出错）<br><a href="https://groups.google.com/forum/#!searchin/caffe-users/caffe$20build$20folder$20/caffe-users/-7_0xR3jLxA/SdQ6V_EB8zUJ" target="_blank" rel="external">也是build文件夹有问题，但是没有解决办法</a><br>测试数据：<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">build<span class="regexp">/tools/</span>caff test -model=examples<span class="regexp">/mnist/</span>lenet_train_test.prototxt -weights=examples<span class="regexp">/mnist/</span>lenet_iter_10000.caffemodel</div></pre></td></tr></table></figure>
</li>
</ol>
<p>最后发现这个<a href="https://groups.google.com/forum/#!searchin/caffe-users/caffe$20build$20folder$20/caffe-users/-7_0xR3jLxA/SdQ6V_EB8zUJ" target="_blank" rel="external">教程</a>也不错</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装过程&quot;&gt;&lt;a href=&quot;#安装过程&quot; class=&quot;headerlink&quot; title=&quot;安装过程&quot;&gt;&lt;/a&gt;安装过程&lt;/h3&gt;&lt;p&gt;Macbook pro集显，CPU only，10.10.5&lt;br&gt;主要记录下遇到的问题&lt;br&gt;&lt;a href=&quot;http:
    
    </summary>
    
    
      <category term="caffe" scheme="http://yoursite.com/tags/caffe/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>关于微信接口网页授权的access token</title>
    <link href="http://yoursite.com/2016/03/05/%E5%85%B3%E4%BA%8E%E5%BE%AE%E4%BF%A1%E6%8E%A5%E5%8F%A3%E7%BD%91%E9%A1%B5%E6%8E%88%E6%9D%83%E7%9A%84accesstoken/"/>
    <id>http://yoursite.com/2016/03/05/关于微信接口网页授权的accesstoken/</id>
    <published>2016-03-05T05:54:42.000Z</published>
    <updated>2016-03-05T07:03:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>感觉基础接口和网页接口中的两个access token在开发者文档始终讲的不太清楚，看的特别迷糊,所以总结一下。</p>
<h3 id="基础接口"><a href="#基础接口" class="headerlink" title="基础接口"></a>基础接口</h3><p>基础接口中的access token有每日调用限制。所以需要获取后保存在数据库中或者单独建一个文件进行保存，每次获取时只需要检测是否失效，失效则再次获取并更新文件。这个在<br><a href="http://demo.open.weixin.qq.com/jssdk/sample.zip" target="_blank" rel="external">demo</a>中有栗子。</p>
<h3 id="网页接口"><a href="#网页接口" class="headerlink" title="网页接口"></a>网页接口</h3><p>而网页接口中的access token是没有调用限制的。它的获取也略复杂，必须先获取code码作为请求参数才能获得。只能获取到一个微信用户信息，是与微信用户一对一的关系。因此在实际使用中每次都进行获取，因为code码五分钟内会失效。不过有一个refresh token（有效期比较长）可以进行重新获取。可以通过实际情况决定要不要保存refresh token。比如有些项目需求点击网页的都是已关注用户，那默认是静默授权，所以即使每次都重新获取code码再换取access token，对用户来讲也是一样的。而有些如果存在未关注用户，每次点进去都需要手动授权，那么保存refresh token就是一个很好的选择。</p>
<h3 id="微信公众号的权限不同，获取网页授权access-token也有差别"><a href="#微信公众号的权限不同，获取网页授权access-token也有差别" class="headerlink" title="微信公众号的权限不同，获取网页授权access token也有差别"></a>微信公众号的权限不同，获取网页授权access token也有差别</h3><p>认证服务号有<strong>高级权限</strong>.可以静默获取access_token与openid模式.不管用户关注没关注,都能用二者拉取用户信息.</p>
<p>订阅号一般<strong>没有高级权限</strong>,需要没有关注订阅号的用户点击同意授权才能获取信息，而关注了的用户还是静默授权.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感觉基础接口和网页接口中的两个access token在开发者文档始终讲的不太清楚，看的特别迷糊,所以总结一下。&lt;/p&gt;
&lt;h3 id=&quot;基础接口&quot;&gt;&lt;a href=&quot;#基础接口&quot; class=&quot;headerlink&quot; title=&quot;基础接口&quot;&gt;&lt;/a&gt;基础接口&lt;/h3&gt;&lt;
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>sass基础</title>
    <link href="http://yoursite.com/2016/02/29/sass%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2016/02/29/sass基础/</id>
    <published>2016-02-29T01:05:51.000Z</published>
    <updated>2016-02-29T02:33:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>在编写大量css时经常会出现一段样式需要到处copy然后修改的情况，小型项目还好，大型项目则会显得非常繁琐，且不利于后期修改，sass就是解决这一问题的利器，当然sass的优势肯定不仅仅在于此，比如减少冗长的选择器，公共样式抽象，变量等等。sass是一个css编译器，而compass则在它的基础上封装了一系列有用的模块和模版。有一个比喻有一点像，说sass与compass的关系就像js和jquery的关系一样。</p>
<hr>
<p><a href="http://Sass-lang.com/try.html" target="_blank" rel="external">在线运行sass代码</a></p>
<hr>
<h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ol>
<li><p>sass有两种语法，缩进式语法和花括号语法。<br>SCSS 语法即Sassy CSS 主要使用花括号和分号，文件后缀为.scss<br>缩进式语法通过换行来分隔，不需要分号,文件后缀为.sass<br>e.g.:</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span></div><div class="line">   <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">   <span class="attribute">background</span>: <span class="number">#000</span>;</div></pre></td></tr></table></figure>
<p>但是在一个项目或者日常编码中最好选择一种作为自己的常用编码规范(虽然在一个项目中的不同文件可以混用)   </p>
</li>
<li>变量： $company-blue: #1875e7;</li>
<li>嵌套多层级的选择器</li>
<li><p>使用混合器 </p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">@mixin horizontal-<span class="keyword">list</span> &#123;</div><div class="line">	…</div><div class="line">&#125; </div><div class="line"><span class="comment">#header &#123;</span></div><div class="line">	@<span class="keyword">include</span> horizontal-<span class="keyword">list</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">//使用混合器加变量,如果include时不带参数，则使用默认参数 </span></div><div class="line">@mixin horizontal-<span class="keyword">list</span>($spacing: <span class="number">10</span>px) &#123;</div><div class="line">	li&#123;</div><div class="line">		float: $spacing</div><div class="line">	&#125;</div><div class="line">	…</div><div class="line">&#125;  </div><div class="line"><span class="comment">#header &#123;</span></div><div class="line">	@<span class="keyword">include</span> horizontal-<span class="keyword">list</span>(<span class="number">20</span>px);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>使用继承@extend<br>使用占位选择器的继承 ％button－reset {…},不编译html未使用的选择器<br>e.g.</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$white</span>: <span class="number">#fff</span>;</div><div class="line">%<span class="selector-tag">button</span>-reset &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1.2em</span>;</div><div class="line">    text_decoration: none;</div><div class="line">    <span class="attribute">cursor</span>: pointer;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.save</span> &#123;</div><div class="line">    @<span class="keyword">extend</span> %button-reset;</div><div class="line">    <span class="attribute">color</span>: <span class="variable">$white</span>;</div><div class="line">    <span class="attribute">background</span>: blue;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.cancel</span> &#123;</div><div class="line">    @<span class="keyword">extend</span> %button-reset;</div><div class="line">    <span class="attribute">color</span>: <span class="variable">$white</span>;</div><div class="line">    <span class="attribute">background</span>: red;</div><div class="line">&#125;</div><div class="line"><span class="comment">//编译后：</span></div><div class="line"><span class="selector-class">.save</span>, <span class="selector-class">.cancel</span> &#123;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1.2em</span>;</div><div class="line">  text_decoration: none;</div><div class="line">  <span class="attribute">cursor</span>: pointer; &#125;</div><div class="line"></div><div class="line"><span class="selector-class">.save</span> &#123;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">  <span class="attribute">background</span>: blue; &#125;</div><div class="line"></div><div class="line"><span class="selector-class">.cancel</span> &#123;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">  <span class="attribute">background</span>: red; &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>compass命令行</p>
<ul>
<li>sudo gem install compass 安装compass（假设已经安装好了ruby）</li>
<li>compass create sample  在当前目录下创建一个compass项目</li>
<li>compass create my_grid —using blueprint  通过blueprint创建一个compass项目</li>
</ul>
</li>
<li>一些具体应用的实践，比如子元素选择器，兄弟元素选择器，&amp;为父选择器标志符</li>
<li>样式表的导入@import 和原生css@import 的区别：css中的@import是异步的，即读到后开始下载资源，而sass的import是代码复制。在三种情况下编译器将import资源解析为css原生import（并不推荐使用原生import）：采用URL（）给出的链接），文件后缀为css,导入文件名字为一个URL地址。</li>
<li>sass支持局部文件的形式，这跟最近研究的博客模版比较相似，通常约定，局部文件以下划线开头，@import一个局部文件时可以省略文件名前面的下划线和文件后缀。@import “themes/night_sky”</li>
<li>混合器是<strong>复制属性</strong>，继承是<strong>复制选择器</strong>，因此继承生成的代码量比较小，在考虑网站性时需要斟酌</li>
<li>静默注释，即不生成目标文件的注释，通常写法为//，可以生成目标文件的注释为/<em>…</em>/</li>
</ol>
<h3 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h3><ol>
<li><p>网格布局<br>网格布局的css框架很多，主要针对blueprint来讲。针对compass来讲有直接加类名和混合器两种做法<br>安装blueprint使用命令行 gem install compass-blueprint<br>创建基于blueprint的项目</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">compass <span class="keyword">create</span> my_grid --<span class="keyword">using</span> blueprint/basic</div><div class="line">compass <span class="keyword">create</span> my_grid --<span class="keyword">using</span> blueprint/semantic <span class="comment">//基于混合器</span></div></pre></td></tr></table></figure>
<p>同时有”960网格布局系统”，这样的css框架很多，大致上与blueprint差别不是很大，有一些细微区别，比如第一和最后一列也有槽，同时可以制定不同的列数划分。<br>计算垂直韵律，核心公式是base－height／font－size ＝line－height（em）</p>
</li>
<li><p>使用css3<br>@import “compass/css3 “引入css3模块<br>使用css3的圆角，创建阴影和渐变,自动生成浏览器前缀。<br>e.g.</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">import</span> <span class="string">"compass/css3"</span>;</div><div class="line"><span class="selector-class">.motion</span> &#123;</div><div class="line">  @<span class="keyword">include</span> text-shadow(</div><div class="line">    rgba(<span class="number">#000</span>, 0.5) -200px 0 0,</div><div class="line">    rgba(<span class="number">#000</span>, 0.4) -400px 0 0,</div><div class="line">    rgba(<span class="number">#000</span>, 0.3) -600px 0 0,</div><div class="line">    rgba(<span class="number">#000</span>, 0.2) -800px 0 0</div><div class="line">  );</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</div><div class="line">  <span class="attribute">font-style</span>: italic;</div><div class="line">  <span class="attribute">text-align</span>: right;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.simon</span> &#123;</div><div class="line">  @<span class="keyword">include</span> border-radius(<span class="number">100px</span>);</div><div class="line">  @<span class="keyword">include</span> box-shadow(</div><div class="line">    black 0 0 0 25px,</div><div class="line">    red 0 -50px 0,</div><div class="line">    blue 50px 0 0,</div><div class="line">    yellow 0 50px 0,</div><div class="line">    lime -50px 0 0</div><div class="line">  );</div><div class="line">  <span class="attribute">background</span>: <span class="number">#999</span>;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>生成的css</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.motion</span> &#123;</div><div class="line">  <span class="attribute">text-shadow</span>: <span class="built_in">rgba</span>(0, 0, 0, 0.5) -<span class="number">200px</span> <span class="number">0</span> <span class="number">0</span>, <span class="built_in">rgba</span>(0, 0, 0, 0.4) -<span class="number">400px</span> <span class="number">0</span> <span class="number">0</span>, <span class="built_in">rgba</span>(0, 0, 0, 0.3) -<span class="number">600px</span> <span class="number">0</span> <span class="number">0</span>, <span class="built_in">rgba</span>(0, 0, 0, 0.2) -<span class="number">800px</span> <span class="number">0</span> <span class="number">0</span>;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</div><div class="line">  <span class="attribute">font-style</span>: italic;</div><div class="line">  <span class="attribute">text-align</span>: right;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.simon</span> &#123;</div><div class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">100px</span>;</div><div class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">100px</span>;</div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">100px</span>;</div><div class="line">  <span class="attribute">-moz-box-shadow</span>: black <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">25px</span>, red <span class="number">0</span> -<span class="number">50px</span> <span class="number">0</span>, blue <span class="number">50px</span> <span class="number">0</span> <span class="number">0</span>, yellow <span class="number">0</span> <span class="number">50px</span> <span class="number">0</span>, lime -<span class="number">50px</span> <span class="number">0</span> <span class="number">0</span>;</div><div class="line">  <span class="attribute">-webkit-box-shadow</span>: black <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">25px</span>, red <span class="number">0</span> -<span class="number">50px</span> <span class="number">0</span>, blue <span class="number">50px</span> <span class="number">0</span> <span class="number">0</span>, yellow <span class="number">0</span> <span class="number">50px</span> <span class="number">0</span>, lime -<span class="number">50px</span> <span class="number">0</span> <span class="number">0</span>;</div><div class="line">  <span class="attribute">box-shadow</span>: black <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">25px</span>, red <span class="number">0</span> -<span class="number">50px</span> <span class="number">0</span>, blue <span class="number">50px</span> <span class="number">0</span> <span class="number">0</span>, yellow <span class="number">0</span> <span class="number">50px</span> <span class="number">0</span>, lime -<span class="number">50px</span> <span class="number">0</span> <span class="number">0</span>;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#999</span>;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>生成精灵图（spirit，也有译作雪碧图的）<br>会为icons下的所有图片生成一张精灵图。</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@<span class="meta"><span class="meta-keyword">import</span> “compass/utilities”;</span></div><div class="line">@<span class="meta"><span class="meta-keyword">import</span> “icons/*png”;</span></div><div class="line">@<span class="meta"><span class="meta-keyword">include</span> all-icons-spirits；</span></div></pre></td></tr></table></figure>
<p>单个选择器使用精灵图</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@<span class="meta"><span class="meta-keyword">import</span> “compass/utilities”;</span></div><div class="line">@<span class="meta"><span class="meta-keyword">import</span> “icons/*png”;</span></div><div class="line">.add-button &#123;</div><div class="line">     @<span class="meta"><span class="meta-keyword">include</span> icons-spirit(box-add)；</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在编写大量css时经常会出现一段样式需要到处copy然后修改的情况，小型项目还好，大型项目则会显得非常繁琐，且不利于后期修改，sass就是解决这一问题的利器，当然sass的优势肯定不仅仅在于此，比如减少冗长的选择器，公共样式抽象，变量等等。sass是一个css编译器，而co
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>解决height：auto无效的方法</title>
    <link href="http://yoursite.com/2016/01/26/%E8%A7%A3%E5%86%B3height%EF%BC%9Aauto%E6%97%A0%E6%95%88%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2016/01/26/解决height：auto无效的方法/</id>
    <published>2016-01-26T03:41:34.000Z</published>
    <updated>2016-01-26T03:45:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>一种可能情况是因为父div中的div处于浮动状态。</p>
<p>浮动是会脱离文档流的，内部两个层就不会局限于父层。所以父层不知道内部的高度。但清理浮动，可以把他们“拉”回来。</p>
<p>父DIV加上 zoom:1;overflow:hidden;</p>
<p>zoom:1会触发ie（ie8以下）的haslayout，刚好能清理浮动。</p>
<p>overflow:hidden; 则对其他浏览器起作用（其实对ie7也会起作用）,主要作用是触发父div使之成为一个BFC容器（BFC内部的元素和外部的元素绝对不会互相影响，因此， 当BFC外部存在浮动时，它不应该影响BFC内部Box的布局，BFC会通过变窄，而不与浮动有重叠。同样的，当BFC内部有浮动时，为了不影响外部元素的布局，BFC计算高度时会包括浮动的高度）</p>
<p><a href="http://www.cnblogs.com/lhb25/p/inside-block-formatting-ontext.html" title="关于BFC" target="_blank" rel="external">关于BFC</a><br>另外，当父DIV有固定高度会同zoom:1;一样会触发ie（ie8以下）的haslayout，但auto值却不会。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一种可能情况是因为父div中的div处于浮动状态。&lt;/p&gt;
&lt;p&gt;浮动是会脱离文档流的，内部两个层就不会局限于父层。所以父层不知道内部的高度。但清理浮动，可以把他们“拉”回来。&lt;/p&gt;
&lt;p&gt;父DIV加上 zoom:1;overflow:hidden;&lt;/p&gt;
&lt;p&gt;zoo
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>黑盒测试和白盒测试</title>
    <link href="http://yoursite.com/2016/01/26/%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95%E5%92%8C%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2016/01/26/黑盒测试和白盒测试/</id>
    <published>2016-01-26T03:32:30.000Z</published>
    <updated>2016-01-26T03:39:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 黑盒测试 </strong><br><strong><em> 边界值测试 </em></strong><br>边界值测试的效率有四个评价指标：用例数量，是否冗余，用例的覆盖范围和是否方便错误追踪，根据这四个指标我们对不同的边界值测试进行了评估。</p>
<p><strong><em> 等价类测试 </em></strong><br>等价类测试则有强组合形式的覆盖和弱组合形式的覆盖，可根据用例的规模和数量选用合适的形式进行测试的覆盖。同时应注意的一点是等价类的划分要清晰合理，否则会出现原输入中不存在输入条件，比如上课提到的年月日输入的等价类划分，很可能就会因为忽略了输入之间的约束条件导致等价类划分不正确。</p>
<p><strong><em> 场景法 </em></strong><br>场景法的核心在于基本流和备选流的场景设计，将使用频率多，发生可能性大的事件流（该事件流具有最大的风险可能性）作为基本流，将判定或循环判定的不同触发条件引起的事件流作为备选流构造场景图，再根据场景图得到可能的场景，此时不能仅将场景图作为一个图来考虑，还需考虑实际情况，即基本流和备选流之间的制约关系来考虑不同的场景。此外，如果同一个校验点有多个备选流且备选流的起点和重点是一样的话，可以考虑将这些备选流合并以简化场景图。</p>
<p>边界值测试重点在于考查边界值及附近的数据，等价类测试侧重于找到整个输入域中最具有代表性的数据，而场景法则注重对于事件流的理解。</p>
<hr>
<p><strong> 白盒测试 </strong><br>白盒测试主要用于单元测试和集成测试，通常不用于系统测试，但是有些方法和思路可以为系统测试做参考，比如白盒测试中的路径测试对路径的覆盖就可以为黑盒测试中的场景法中基本流和备选流的遍历提供参考意义。白盒测试主要侧重于程序的源代码，即实现的细节，针对性很强。</p>
<p>白盒测试的主要方法有：逻辑覆盖，包括语句覆盖，判定覆盖，条件覆盖，判定/条件覆盖，条件组合覆盖等（覆盖标准发现错误的能力呈由弱到强）；基路径测试；静态白盒测试。</p>
<p><strong><em> 逻辑覆盖 </em></strong></p>
<p>逻辑覆盖主要侧重于程序的逻辑结构，根据不同逻辑结构（顺序结构，判断分支和循环）的风险程度组合使用覆盖指标来衡量。</p>
<p>语句覆盖保证每条可执行语句都被至少执行一次，它的覆盖形式类似于等价测试中的弱组合的形式的覆盖，需要注意的的是屏蔽陷阱，即在与，或关系中，如果前一个判定条件的取值真假会屏蔽后一个语句的真假值（或：前一个取真，后一个不论真假整个表达式的值都为真，与的话类似）。因为语句覆盖侧重的是语句所以无法发现控制流的缺陷。</p>
<p>分支覆盖是保证每个判定节点的取真和取假至少执行一次，也是一种弱组合形式的覆盖。然而判定覆盖没有测试到每个简单逻辑判定条件的正确性，所以出现了条件覆盖，即对每个子判定条件进行覆盖。为了结合判定覆盖和条件覆盖的利弊，出现了判定/条件覆盖，但是虽然理论上的效果很好，实际操作却存在技巧和难度。条件组合是满足每个判定节点中所有简单判定条件的各种可能取值的组合至少执行一次，这种方法也是理论上很好，但是实际的用例数量可能会很大。</p>
<p><strong><em> 基路径测试 </em></strong></p>
<p>基路径测试的基础是程序图，圈复杂度决定了基路径的个数（但是结构上的缺陷可能导致路径执行不到或者有冗余），为了确保基本路径集中的每一条路径的执行，根据判断结点给出的条件，选择适当的数据以保证某一条路径可以被测试到。</p>
<p><strong><em> 静态白盒测试 </em></strong></p>
<p>静态白盒测试有：代码检查（包括桌面检查desk checking，代码走查walk through，代码审查Ispection和技术评审review），静态结构分析。</p>
<p><strong><strong> 桌面检查(Desk checking) </strong></strong></p>
<p>桌面检查(desk checking)是一种传统的检查方法，由程序员检查自己编写的程序。程序员在程序通过编译之后对源代码代码进行分析、检验，并补充相关的文档，目的是发现程序中的错误。</p>
<p><strong><strong> 代码走查(Walk hrough) </strong></strong></p>
<p>代码走查walk through就是针对代码，在假想的输入情况下，逐行的浏览代码，走查代码中潜在的缺陷并记录结果的过程。以小组会议方式进行，每小组3-5人。与代码审查不同的是，走查要求与会者扮演计算机的角色让测试用例沿被测程序的逻辑运行，是在模拟动态测试；而代码审查更多的是静态测试。</p>
<p><strong><strong> 代码审查(Ispection) </strong></strong></p>
<p>代码审查Ispection是由一组人通过阅读、讨论和争议对程序进行静态分析的过程，以小组会的方式进行。审查小组一般由若干程序员（包括程序代码的设计者）和代码检查人员组成。会前把设计规格说明书、控制流程图、程序文本以及要求、规范、错误检查清单交给与会者，开会时程序作者朗读解释程序，其他人则集中精力，捕捉程序在结构、功能、编码风格等方面的问题。</p>
<p><strong><strong> 静态结构分析 </strong></strong></p>
<p>函数调用关系图和程序控制流图的分析。调用关系图的根部调用点，被多次上层节点调用的底层函数，多接口的情况都是需要重视的。控制流图则关注入出口数量，是否存在孤立节点和最短最长路径的差别来判断函数结构是否健壮和出现缺陷的概率。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 黑盒测试 &lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;em&gt; 边界值测试 &lt;/em&gt;&lt;/strong&gt;&lt;br&gt;边界值测试的效率有四个评价指标：用例数量，是否冗余，用例的覆盖范围和是否方便错误追踪，根据这四个指标我们对不同的边界值测试进行了评估。&lt;/p&gt;
&lt;
    
    </summary>
    
    
      <category term="软件测试" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>“正则式用变量值定义的方法（转）”</title>
    <link href="http://yoursite.com/2016/01/26/%E2%80%9C%E6%AD%A3%E5%88%99%E5%BC%8F%E7%94%A8%E5%8F%98%E9%87%8F%E5%80%BC%E5%AE%9A%E4%B9%89%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%88%E8%BD%AC%EF%BC%89%E2%80%9D/"/>
    <id>http://yoursite.com/2016/01/26/“正则式用变量值定义的方法（转）”/</id>
    <published>2016-01-26T03:28:07.000Z</published>
    <updated>2016-01-26T03:29:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>如reg是正则要替换的内容，<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ch = <span class="string">"aaa"</span>;</div><div class="line"><span class="keyword">var</span> reg = <span class="string">"/"</span>+ch+<span class="string">"/ig"</span>;</div><div class="line"><span class="keyword">var</span> str = <span class="string">'aaa bbb ccc aaa aaa'</span>;</div><div class="line"><span class="keyword">var</span> val = str.replace(reg,<span class="string">""</span>);</div><div class="line">alert(val);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>用eval转义,你现在reg是一个字符串</p>
<p>正确写法<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="keyword">var</span> ch = <span class="string">"aaa"</span>;</div><div class="line"><span class="keyword">var</span> reg = <span class="string">"/"</span>+ch+<span class="string">"/ig"</span>;</div><div class="line"><span class="keyword">var</span> str = <span class="string">'aaa bbb ccc aaa aaa'</span>;</div><div class="line"><span class="keyword">var</span> val = str.replace(<span class="built_in">eval</span>(reg),<span class="string">""</span>);</div><div class="line">alert(val);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如reg是正则要替换的内容，&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/d
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>破茧成蝶 用户体验设计师的成长之路读书心得</title>
    <link href="http://yoursite.com/2016/01/17/%E7%A0%B4%E8%8C%A7%E6%88%90%E8%9D%B6-%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1%E5%B8%88%E7%9A%84%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%E8%AF%BB%E4%B9%A6%E5%BF%83%E5%BE%97/"/>
    <id>http://yoursite.com/2016/01/17/破茧成蝶-用户体验设计师的成长之路读书心得/</id>
    <published>2016-01-17T06:48:22.000Z</published>
    <updated>2016-01-17T11:12:58.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一部分-成为用户体验设计师的信念"><a href="#第一部分-成为用户体验设计师的信念" class="headerlink" title="第一部分 成为用户体验设计师的信念"></a>第一部分 成为用户体验设计师的信念</h3><h4 id="设计与艺术之间有区别"><a href="#设计与艺术之间有区别" class="headerlink" title="设计与艺术之间有区别"></a>设计与艺术之间有区别</h4><p>设计的核心是解决问题，它已经形成了一套自己的规范和粗略的检验标准。艺术的核心嘛，外人不便多语。</p>
<h4 id="相关职业"><a href="#相关职业" class="headerlink" title="相关职业"></a>相关职业</h4><p>用户研究员，交互设计师，视觉设计师<br>用户研究员的目的是了解目前用户需求，进行市场调研。<br>交互设计师是得出产品设计的一系列交互流程，绘制线框图。<br>设觉设计师的工作是通过线框图，美化产品页面，完成细节设计和配色处理。<br>这样细化的分工一般在中大型公司才有，在小型公司中是不存在这样的分工的，一般这些工作都由产品经理和界面设计师一起完成。<br>然而产品经理更偏向于商业利益的考虑。</p>
<h4 id="用户体验的核心"><a href="#用户体验的核心" class="headerlink" title="用户体验的核心"></a>用户体验的核心</h4><p>用户体验是从用户的角度出发，提高互联网产品的易用性和良好的交互性，主要工作是设计出一套产品使用流程的线框图。<br>一套线框图背后侧重的是一个设计师的积累与对用户习惯，产品定位的一系列思考，这样一套线框的产出只是冰山一角，水面下的巨冰才是需要长期修炼的内功。要有这样的内功，需要一些特质，比如说对互联网产品的喜爱，对新事物有好奇心，对于已有产品的深入思考，以及平时对于大众的使用习惯的观察和了解。<br>在初学用户体验设计时，不宜太偏重细节，比如对工具（axure rp）的使用，一开始就直接上手工具往往会导致思考不深入，得到的只是多个已有产品的拼凑，还是那句老话，一个优秀的设计产品一定在下笔前经过了完全独立的思考，这其实跟写程序类似，一开始就打开ide进行编码而不仔细思考具体的实现思路往往意味着后期不断的改代码。而之前的思考完全可以在纸上实现，感觉虽然好长时间没有在纸上写文章了，但是手对纸和笔的感觉从来都不会陌生。想想之前打开ps脑中什么都没有的感觉，纸笔才是解放想象力的关键。</p>
<h4 id="职业规划"><a href="#职业规划" class="headerlink" title="职业规划"></a>职业规划</h4><p>之前有打算走这条路的时候没有看到这本书，感觉自己是非科班出身所以处于劣势，现在想想真是naive，人生太长，什么时候做选择都不晚，关键是做完之后不要犹豫，敢于试错。</p>
<h3 id="第二部分-修炼技能"><a href="#第二部分-修炼技能" class="headerlink" title="第二部分 修炼技能"></a>第二部分 修炼技能</h3><p>修炼技能的必经之路就是参与项目，从一个产品的构思到最终上线的整个过程，初期跟pm一起完成需求，很容易忽视的就是产品定位和目标群体的问题，很多时候一个不专业的产品经理会从商业或者客户的需求考虑希望产品大而全，往往忽视了可能为了那1%的用户导致了99%的用户体验不好，或者体验设计师自己也没有意识到目标群体这个问题，在考虑用户习惯的时候不够具有针对性。</p>
<h4 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h4><p>这本书的需求分析部分讲的还是很好的。<br>需求分析的四个来源：用户调研，用户反馈，竞品分析，产品数据。<br>获取到了需求之后进行需求筛选，需求优先级划分，在此过程中合理的对待用户的意见，因为在上需求工程课的时候沈男神也讲到了很多时候可能用户都不清楚自己想要什么，即使他表述出了自己的需求，也可能容易出现理解偏差或者与目标群体需求不符，有时候甚至会涉及到实现的回报并不高。</p>
<h4 id="设计规划"><a href="#设计规划" class="headerlink" title="设计规划"></a>设计规划</h4><p>从需求到界面中间隔着一道门，如何打开这扇门就考验了一个用户体验设计师真正的水平了，首先是导航的实现，涉及一个分类模型的问题，如何使之更贴近用户的习惯需要部分的心理学知识，比如那本设计师入门经典诺曼的《设计心理学》，还有《about face 3》<br>有些tips是很有意义的：</p>
<h5 id="导航的自我解释"><a href="#导航的自我解释" class="headerlink" title="导航的自我解释"></a>导航的自我解释</h5><p>即一个导航具有一定的解释性，使用户在尽量短的时间内建立起导航信息结构，比如面包屑导航。</p>
<h5 id="深广度平衡"><a href="#深广度平衡" class="headerlink" title="深广度平衡"></a>深广度平衡</h5><p>举一个人机交互课程上面老师讲烂了的例子，word界面的导航，主要是对比word2007和word2010（是挺老的），word从2010起它的导航条就不会再超过三次点击了，就是尽量缩短操作的深度，避免因为操作的繁琐和深度过深导致用户记忆疲劳。然而过广的设计又会导致入口繁多，同样增加用户记忆负担，因此平衡十分重要。</p>
<h5 id="用户所需信息和商业信息的平衡"><a href="#用户所需信息和商业信息的平衡" class="headerlink" title="用户所需信息和商业信息的平衡"></a>用户所需信息和商业信息的平衡</h5><p>这个感觉很多无良网站都做的很讨厌，用一块fixed的牛皮癣遮住你要读的内容，一般碰到这种网站我都是直接关掉的。感觉简直为了赚钱丧心病狂。</p>
<h5 id="为重要的功能和常用功能设置快捷入口"><a href="#为重要的功能和常用功能设置快捷入口" class="headerlink" title="为重要的功能和常用功能设置快捷入口"></a>为重要的功能和常用功能设置快捷入口</h5><p>这个就无需赘言了。</p>
<h5 id="以人为本的设计"><a href="#以人为本的设计" class="headerlink" title="以人为本的设计"></a>以人为本的设计</h5><p>设计应该有趣，反馈积极，提醒贴心。这几点很多新的软件都做的比较好，特别是一些年轻的团队做的产品，比如知乎更新产品的时候都会卖个萌，感觉挺有意思的。<br>从任务流程到页面流程到用户交互，这个粒度是由粗入细的。<br>同时要突出主要任务，比如最近电子商务课程上老师要抽象出天猫的购物流程时，我就发现有在整个交易过程中，有一个流程标志从头到尾都在页面顶部提示用户在主要任务中进入到了哪一步，下一步是什么，着对于不熟悉购物流程的用户是非常友好的（虽然估计这样的用户很少哈哈哈）。<br>在具体设计过程中还有很多细节的注意点，这些点在很多交互设计相关的书中都有涉猎，像拟物化设计，视觉分类，向导控件，符合用户心理模型之类的，多看几本就基本了解这些理论了。<br>讲一个不知道在哪里看到的有意思的事，说是汉堡图标（就是三道杠）在很多手机页面设计上都有用到（比如本博客在手机端浏览的那个菜单按钮），一般表示菜单，但是将菜单两个字加在图标的旁边则使这个按钮的点击率增加了30%（具体数据记不清了），说明很多时候，设计师以为的图标的“一般含义”是不需要标注的，实际上很多用户对这个意义是没有像设计师那样下意识的反应的，比如我的一些长辈，他们甚至不清楚哪些图标是可以点击的。因此不要以自身的经验来带入用户，很多时候可能设计师都不够“了解”用户。</p>
<h4 id="设计标准"><a href="#设计标准" class="headerlink" title="设计标准"></a>设计标准</h4><p>设计的产出是原型，设计规范就是针对原型来讲的，出了原型交付，还应有良好的文档说明，比如交互说明，页面流程等等，但是感觉在小公司或者团队，这些还是没那么严苛的，甚至这些中的很多比如错误状态描述，交互动画都是由前端技术人员设计和实现的，毕竟小的团队不会让你一个人只负责切葱，但是如果作为一个UI设计师这些多做一点只会有益无害，特别是交互状态说明和状态标注，觉得之前做设计的时候太不成熟了。如果以后有这方面深入的打算，这些可以作为规范来了解。</p>
<h4 id="项目跟进和结果检验"><a href="#项目跟进和结果检验" class="headerlink" title="项目跟进和结果检验"></a>项目跟进和结果检验</h4><p>掌握主动权用数据检验产品目标。<br>测试时采用单变量测试法，这跟软件测试有共通之处啊。<br>注意分析数据。</p>
<h3 id="第三部分-如何实现自身价值"><a href="#第三部分-如何实现自身价值" class="headerlink" title="第三部分 如何实现自身价值"></a>第三部分 如何实现自身价值</h3><p>不管有没有做交互设计的念头，这部分的内容都挺有参考价值的。<br>学会沟通，沟通的方法很多，在合适的时候选择合适的方法可以减少沟通成本，感觉跟刚结课的软件项目管理好像啊。<br>乐于分享。<br>学会思考，事半功倍。从小就被教育一定要乖要听话，感觉这么多年仿佛受毒害了一般，丧失了自己思考的能力，这里的三步分析法挺有意思的：<br>why，what，how。<br>先思考为什么，然后再对现状进行更深层次的了解，然后思考如何做的更好。<br>眼界开阔，知识面广。不仅做交互的应该如此，做技术的也应该这样，我们要做一个有趣的人嘛o(^_-)O</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;第一部分-成为用户体验设计师的信念&quot;&gt;&lt;a href=&quot;#第一部分-成为用户体验设计师的信念&quot; class=&quot;headerlink&quot; title=&quot;第一部分 成为用户体验设计师的信念&quot;&gt;&lt;/a&gt;第一部分 成为用户体验设计师的信念&lt;/h3&gt;&lt;h4 id=&quot;设计与艺术
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="设计" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>敏感的人如何应对外界压力</title>
    <link href="http://yoursite.com/2016/01/16/%E6%95%8F%E6%84%9F%E7%9A%84%E4%BA%BA%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E5%A4%96%E7%95%8C%E5%8E%8B%E5%8A%9B/"/>
    <id>http://yoursite.com/2016/01/16/敏感的人如何应对外界压力/</id>
    <published>2016-01-16T11:26:46.000Z</published>
    <updated>2016-01-26T03:43:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>一看书名<a href="http://book.douban.com/subject/1085007/" title="敏感的人如何应对外界压力" target="_blank" rel="external">敏感的人如何应对外界压力</a>我就知道我一定会看的，这几年看的心理学相关的东西不少，也动过考考心理咨询师的念头，但是后来问了下同学说那个东西比较水，非心理专业的去考程序略麻烦也就放弃了。因为经常会觉得自己精神状态不太好，边看也是一个自我治疗的过程，可能有些问题别人感觉不太明显，但是自己却是体会很深的，看完整个序言我就知道没错了，就是这本了。有些困扰我很长一段时间的，我以为的心理问题在这本书中都讲到了。<a id="more"></a>除了剖析这些行为的合理性，怎样改善的方法也有提及，不管怎样，这本书肯定会在我的再读书单里。<br>作为无论是人还是动物里面那必须存在的15％到20%，甚至打着遗传学烙印的高度敏感个体，这本书给了我极大的鼓舞。原因正如书中所说</p>
<blockquote>
<p>不论是好是坏,这个世界正日益为攻击性文化所控制,因为 当两个文化接触的时候,更富攻击性的文化自然占了上风。这些文化希望人们往外看,开拓竞争,取得胜利</p>
</blockquote>
<p>但是这本书不只一次的强调了敏感内倾型人格存在的必要性和合理性。<br>比如尽管很久以前读《谁动了我的奶酪》，花了一本书的篇幅只为讲述一个道理：<br>人在面对变化时要适应变化，迅速找到自己的定位。<br>但我在面对新的环境时还是会感到很苦恼。</p>
<blockquote>
<p>高度敏感的人通常抵制变化,或者我们会迫使自己迅 速接受变化,但结果往往会适得其反。其实我们只是不会处理 变化的环境,甚至是好的转变,这种经历有时简直要令人发疯。</p>
</blockquote>
<p>我曾一度觉得这是性格缺陷，但这其实是本性，这样一想就觉得自己没那么讨厌了呢。</p>
<hr>
<p>一些tips：</p>
<p>对付在社交场合下过激状态的五个良策:</p>
<ul>
<li>记住过激状态并不一定是令人害怕的。 </li>
<li>找其他高度敏感的人进行一对一的谈话。 </li>
<li>使用减低过激程度的手段。</li>
<li>逐渐养成一个良好的“人格面具”，并有意识的使用它。</li>
<li>跟别人谈谈你的敏感性格。</li>
</ul>
<p>在不得不闲聊的时候。先决定自己是想说话呢,还是想当 听众。如果你想当听众,那么事情很好办,很多人都很喜欢说 话,不过记住要提一些具体的问题,要么就问他“:你不参加聚会的时候,干些什么事情 ?(”在不开会、不参加婚礼、不听音乐会等等的时候,干些什么事情</p>
<p>如果你想说话(这样你可以掌握谈话的主动,不会感到厌倦),那么要事先做好准备,把谈话引向自己喜欢的话题上,那你就可以不停地说下去,说下去。“天气真糟糕,是不是?不过这 样也好,这样我就可以心安理得地躲在家里,专心致志地写我的书了。”于是,对方就会问你在写什么书 。你也可以说“:天气真糟糕,今天不能训练了。也可以说“我的那些蛇最恨这种天气。”</p>
<p>记住别人的名字。初次见面,你也许记不住对方的名字,因为当时你注意力不集中,处于过激状态。所以,如果你听到人家报出名字来,要养成习惯,说话时用上这个名字“。阿诺德,很高兴认识你。”然后过两分钟再把这个名字说上一次。事后回想一 下今天认识了谁,这样印象就更持久。</p>
<p>找人办事。小事情求人,应该是不难开口的。但是有时候 我们把这些事情列在待办事项表上,就显出冠冕堂皇的样子,好像事情又大又难办。有可能的话,想到有什么事要求人帮忙,马上去说。要么都攒在一起,在情绪外向的时候一起问。如果事 情稍微大一点,那么你要在心理上把大事化小。你可以这样想:<br>这事办起来很快,给你办事的人不会觉得有多少麻烦。事情如果再大一点,你应该把先后程序列表。一开始就要找对办事对象。找人办要紧事,一定要找一个人事先预演一下,让对方从各种角度回答你的请求,尽管事情不会因此变得好办一点,但是你 会觉得心里有底。</p>
<p>推销自己。坦率地说,推销的工作一般不适合高度敏感的人。但是即使你不做推销商品的工作,生活中有很多时候，我们要推销自己的点子,找工作时推销自己,还要推销我们富于创新 意义的作品。如果你相信有这样一种东西对人对社会确有帮 助,那么结果会怎么样呢 ?从最温和的推销方式上看,你的推销 方式也许就属于这一类,推销不过是把你知道的事情告诉别人。待人家明白了你的话,你就让他们自己下决心。</p>
<p>如果牵涉到金钱交易,高度敏感的人总是觉得受人钱财是有愧的(如果自己觉得内疚,那就捫心自问“:我到底价值几何?”)在通常情况下,我们不能给人家白干不要钱,也不应该白 干。我们如果要继续向社会提供服务或产品,没有钱是万万办 不到的。这一点大家都理解,和你买东西付钱是一个道理。</p>
<p>学会投诉。哪怕投诉合理合法,高度敏感的人也会觉得很难,但是值得去做。那些自我感觉不好的人(因为自己太年轻、太老、太胖、皮肤太黑、太敏感等等)尤其应该去尝试,学会据理力争,挺起腰板。<br>不过,你必须做好心理准备,随时对对方的反应作出回击。愤怒是最能让人陷入激发状态的情绪,愤怒能激励我们的斗志。不管是你愤怒,还是别人愤怒,甚至是你看见远处有人发火,所有这一切都会有面临激发状态之感。</p>
<p>身处小团体。在高度敏感的人眼里,团队、班级、委员会是很复杂的事情。别人不注意的事情,我们总是看在眼里,但是 因为不想处于过激状态,我们就一言不发。然后,最后总是会有人问你,你的看法如何。这种时刻是很尴尬的,但是在团体里却 很重要。高度敏感的人习惯于缄默不语,他们往往想不到,随着 时间的推移,一个人越是沉默寡言,他的影响力就越大。除了想给你一个机会发表意见之外,团体里的人也许无形中感到担心。 你的心还属于团体吗?你坐在那里是不是默默对他们评头品足?你是不是心怀不满,想要一走了之?如果你这时候走人,他 们就会在心里存下这些担心,这就是沉默寡言的成员总是特别 引人注目的原因。他们问你尊意如何,也可能是出于礼貌,但是这种担心仍然是存在的。如果你参与活动,不够热心,别人就会非常注意你。那时,别人很可能会觉得,他们最好的防卫武器是,不等你排斥他们,先把你排斥在外。如果你不相信我的话,可以到一个新团体里试上一次,什么话也别说,到时候就真相大 白了。</p>
<p>考虑到人们对沉默的人总是备加关注,如果你不想和别人那样滔滔不绝,你就应该向他们保证,自己对他们并没有排斥 感,也没有要走人的意思。如果你对团体有好感,你就应该把这种感觉告诉他们。你还应该让大家知道,你如果有话要说,就会 说的。也可以让他们下次再征询你的意见。<br>你也可以自己决定,是不是应该和他们谈谈自己的敏感性格。但是这样的话,你就给自己贴上了标签,很容易自己对号 入座。</p>
<p>在大庭广众下发言、表演。这是高度敏感的人天生就很擅 长的事情,真的,不骗你(。可是我们觉得很“难”,为什么呢 ?你 自己去想一想吧。)首先,我们总觉得有些要紧的话别人没说。<br>当别人对我们说的话表示感谢时,我们感到心满意足,下一次就觉得容易些。其次,我们总是“有备无 患”。有时候,我们会返回家门看看炉子有没有关掉,以免发生意外(如房子着火 了),别人会觉得我们有“强迫症”,不像平时那样果断。但是,如果有谁明知自己当众讲话会紧张,却不做好充分准备,那他就太傻了。准备充分,大多能表现出色。(因此,所有写如何克服羞怯心理的书，都爱引用政治家、演员和喜剧演员如何克服羞怯的故事“,他们能够做到,你也能。”)</p>
<p>关键还是准备,准备,再准备。你也许不害怕大声朗读,那 你应该把想说的话大声念出来,一直念到朗朗上口为止。如果 这样做在当时情景下不是很合适,那么你要充满自信地把自己 的理由说给人家听,然后理直气壮地朗读讲稿。<br>要朗读得好,也是需要做准备,需要练习的。一定要注意重读,而且要在规定的时间内念完稿子,这样你就能念得从容 不迫。<br>然后,你可以过渡到用便条。在人多的场合里,我总是先把 自己要说的话写好简要的提示,然后再举手发言、提问,万一脑子里一片空白,可以用便条提醒自己。(任何让我处于过激状态 的场合我都是这样做的,连看医生也不例外。)<br>最重要的是,要尽量在很多人面前练习,尽量把演讲、表演的气氛复制出来。比如,到演讲厅去练习,穿上那天准备穿的衣服,打开音响系统等等,到时候,影响你的新的因素就会很少这正是控制激发程度的最大秘密。如果你这样做了,也 许就会表现得很出色。<br>我通过教书克服了不敢当众说话的毛病。教书对高度敏感的人来说,是个好办法。你在传授知识,学生需要你,于是你工作严谨的一面就展现出来了。听众不是来娱乐的,所以你为了讲课生动有趣所作的一切努力,他们都会非常欣赏。你会发现, 自己只要大胆说话,就能说出真知灼见。<br>但是,学生有的时候是很没心没肺的。我很幸运,因为学校 要求学生安静听讲。我对此公开表示谢意。如果你能把这种规 范确立起来,对你班上的所有学生都是大有好处的。有些学生 也害怕当众说话,你和学生可以共同学习。<br>如果有人在注视你怎么办?是不是真有人在注视你?也许 这些人是你由于内心恐惧而自己想象出来的。你可以设想这些 观众就在你的周围(看看他们是否真的在注视你,或者至少没像 你 想 象 的 那 样 )。<br>如果真有人在注视你,你能请他们不要注视吗?你能阻挡 别人不注视你吗?你能因为别人注视你而感到高兴吗?</p>
<p>这里我要讲一讲我学肚皮舞的经历。那是我惟一一次学肚皮舞。和很多人一起学体操,我总是学不会,因为我知道有人在看我,情绪一兴奋,动作就没法协调。于是很快就落在别人后面,表现一次比一次差劲。<br>不过,这回,我扮演一个新角色。我把自己看作是一个很可爱的、讨人喜欢的女教授(这一点很重要)。她总是心不在焉,整天想入非非,根本不知道自己身在何处。她被人带到这个滑稽 场合,学跳肚皮舞,看她笨手笨脚的样子,大家都很开心。<br>这样想的结果是我知道大家都在看我,但是这没有什么。 他们笑我,但是我听着是善意的。我稍有进步,他们就大加赞 扬。这个办法在我身上很有效。<br>下次如果你感到有人在注视你,你要迎着人家的目光,会自嘲“。我们诗人一做不来这些加减乘除的。”也可以说“:我这人生来是个古板的机械师,要想画一幅破发动机的内部结构还真难为我啦。”</p>
<p>在有的场合,无论从什么角度看都是令人尴尬的。你脸红一阵,也就挺过去了。做人就是这样的。不过这种情况并不常 见。在一次正式场合里,我排在队伍中,我三岁的儿子无意中把我的裙子拽下来了。你有没有比这更尴尬的经历?事后互相说说自己的尴尬事,只能如此,别无他法 。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一看书名&lt;a href=&quot;http://book.douban.com/subject/1085007/&quot; title=&quot;敏感的人如何应对外界压力&quot;&gt;敏感的人如何应对外界压力&lt;/a&gt;我就知道我一定会看的，这几年看的心理学相关的东西不少，也动过考考心理咨询师的念头，但是后来问了下同学说那个东西比较水，非心理专业的去考程序略麻烦也就放弃了。因为经常会觉得自己精神状态不太好，边看也是一个自我治疗的过程，可能有些问题别人感觉不太明显，但是自己却是体会很深的，看完整个序言我就知道没错了，就是这本了。有些困扰我很长一段时间的，我以为的心理问题在这本书中都讲到了。
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>mac 命令行</title>
    <link href="http://yoursite.com/2016/01/16/mac-%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    <id>http://yoursite.com/2016/01/16/mac-命令行/</id>
    <published>2016-01-16T11:10:17.000Z</published>
    <updated>2016-01-16T11:23:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p><strong> 列出文件 </strong><br>ls 参数 目录名<br>例: 想看看跟目录下有什么，<br>ls /<br>想看看驱动目录下有什么，<br>ls /Library/Extensions<br>参数 -w 显示中文，-l 详细信息， -a 包括隐藏文件<br><strong> 转换目录 </strong><br>cd<br>例：想到驱动目录下溜达一圈<br>cd /System/Library/Extensions<br><strong> 建立新目录 </strong><br>mkdir 目录名<br>例：在驱动目录下建一个备份目录 backup<br>mkdir /System/Library/Extensions/backup<br>在桌面上建一个备份目录 backup<br>mkdir /User/用户名/Desktop/backup<br><strong> 拷贝文件 </strong><br>cp 参数 源文件 目标文件<br>例：想把桌面的Natit.kext 拷贝到驱动目录中<br>cp -R /User/用户名/Desktop/Natit.kext /System/Library/Extensions<br>参数R表示对目录进行递归操作，kext在图形界面下看起来是个文件，实际上是个文件夹。<br>把驱动目录下的所有文件备份到桌面backup<br>cp -R /System/Library/Extensions/<em> /User/用户名/Desktop/backup<br><em>* 删除文件 </em></em><br>rm 参数 文件<br>例：想删除驱动的缓存<br>rm -rf /System/Library/Extensions.kextcache<br>rm -rf /System/Library/Extensions.mkext<br>参数－rf 表示递归和强制，千万要小心使用，如果执行了 rm -rf / 你的系统就全没了</p>
<p><strong> 移动文件 </strong><br>mv 文件<br>例：想把AppleHDA.Kext 移到桌面<br>mv /System/Library/Extensions/AppleHDA.kext /User/用户名/Desktop<br>想把AppleHDA.Kext 移到备份目录中<br>mv /System/Library/Extensions/AppleHDA.kext /System/Library/Extensions/backup<br><strong> 更改文件权限 </strong><br>chmod 参数 权限 文件<br>例：把驱动目录下所有文件设定到root读写，其他用户只读<br>chmod -R 755 /System/Library/Extensions<br>参数R 表示递归，755表示各用户的权限<br><strong> 更改文件属主 </strong><br>chown 参数 用户:组 文件<br>例：把驱动目录下的所有文件属主改成根用户<br>chown -R root:wheel /System/Library/Extensions<br>参数R 表示递归操作<br><strong> 修复整个系统中文件的权限 </strong><br>diskutil repairpermissions /<br>严格的说这不是一个unix 命令，而是osx一个软件，记得修改或添加的驱动就执行一次。<br><strong> 文本编辑 </strong><br>nano 文件名<br>例：编辑natit Info.plist<br>nano /System/Library/Extensions/Natit.kext/Info.plist<br>编辑完成后 用 Ctrl ＋O 存盘，Ctrl＋X 退出</p>
<hr>
<h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><p>用 Tab 键自动补齐命令<br>比如想到 /System 目录中去，输入 cd /Sy 然后按一下Tab 键，命令就会自动补齐成 cd /System<br>操作带名字中带有空格的文件和目录<br>空格在命令中写成 空格， 比如要进入 My Documents，命令为 cd My Documents<br>查看命令的详细帮助<br>man 命令名<br>比如要看看 ls 命令的详细用法，执行 man ls</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本命令&quot;&gt;&lt;a href=&quot;#基本命令&quot; class=&quot;headerlink&quot; title=&quot;基本命令&quot;&gt;&lt;/a&gt;基本命令&lt;/h2&gt;&lt;p&gt;&lt;strong&gt; 列出文件 &lt;/strong&gt;&lt;br&gt;ls 参数 目录名&lt;br&gt;例: 想看看跟目录下有什么，&lt;br&gt;ls /
    
    </summary>
    
    
      <category term="操作系统" scheme="http://yoursite.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="命令行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>操作mysql的命令行</title>
    <link href="http://yoursite.com/2016/01/16/mysql-%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    <id>http://yoursite.com/2016/01/16/mysql-命令行/</id>
    <published>2016-01-16T10:29:12.000Z</published>
    <updated>2016-01-16T11:09:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>在本机上操作mysql可以使用phpMyAdmin，这个基于网页的数据库管理工具会很方便，但是在远程服务器上操作数据库使用命令行将会方便很多。<a id="more"></a><br>mysql -u root -p 进入数据库后如下：<br>mysql&gt;<br>命令需要以分号结尾。括号内为同义命令行。<br>?         (\?) Synonym for `help’.<br>clear     (\c) Clear the current input statement.<br>connect   (\r) Reconnect to the server. Optional arguments are db and host.<br>delimiter (\d) Set statement delimiter.设置输入结束符，默认情况下是分号。<br>edit      (\e) Edit command with $EDITOR.<br>ego       (\G) Send command to mysql server, display result vertically.<br>exit      (\q) Exit mysql. Same as quit.<br>go        (\g) Send command to mysql server.<br>help      (\h) Display this help.<br>nopager   (\n) Disable pager, print to stdout.<br>notee     (\t) Don’t write into outfile.<br>pager     (\P) Set PAGER [to_pager]. Print the query results via PAGER.<br>print     (\p) Print current command.<br>prompt    (\R) Change your mysql prompt.<br>quit      (\q) Quit mysql.<br>rehash    (#) Rebuild completion hash.<br>source    (.) Execute an SQL script file. Takes a file name as an argument.<br>status    (\s) Get status information from the server.<br>system    (!) Execute a system shell command.<br>tee       (\T) Set outfile [to_outfile]. Append everything into given outfile.<br>use       (\u) Use another database. Takes database name as argument.<br>charset   (\C) Switch to another charset. Might be needed for processing binlog with multi-byte charsets.<br>warnings  (\W) Show warnings after every statement.<br>nowarning (\w) Don’t show warnings after every statement.<br>resetconnection(\x) Clean session context.<br>showdatabase 缺省情况下有两个数据库，mysql和sys。mysql存放的是用户权限信息<br>create database dbname 创建数据库<br>drop database dbname 删除数据库表<br>use dbname 使用某一数据库<br>create table tablename() 创建表<br>drop table tablename 删除表单<br>delete from tablename 清空表中记录<br>select * from tablename 显示表中记录</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在本机上操作mysql可以使用phpMyAdmin，这个基于网页的数据库管理工具会很方便，但是在远程服务器上操作数据库使用命令行将会方便很多。
    
    </summary>
    
    
      <category term="命令行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>OpenCv&amp;OpenGl</title>
    <link href="http://yoursite.com/2016/01/11/opencv-opengl/"/>
    <id>http://yoursite.com/2016/01/11/opencv-opengl/</id>
    <published>2016-01-11T01:30:16.000Z</published>
    <updated>2016-01-11T14:20:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>这段时间准备开始毕设了，题目是研究生的导师给的，应该跟未来三年的研究方向有关，所以态度还是要有的，先搜集资料试了下水，跟我想象的有点不同，但是也蛮有意思的，还比较感兴趣，是基于深度学习的车型分类，题目不新，希望会有前辈的资料，在了解的过程中看到opencv这个东西，联想到OpenGL和前段时间看到的webgl,所以想记录下自己了解到的。<a id="more"></a><br>首先理解几个概念：</p>
<h2 id="CG，CV，DIP，AR"><a href="#CG，CV，DIP，AR" class="headerlink" title="CG，CV，DIP，AR"></a>CG，CV，DIP，AR</h2><p>CG(Computer Graphics): 图形又称矢量图，是指由外部轮廓线条构成的矢量图。既有计算机绘制的直线、圆、矩形、曲线、图表等。<br>CV(Computer Vision):计算机视觉是使用计算机及相关设备对生物视觉的一种模拟。它的主要任务就是通过对采集的图片或视频进行处理以获得相应场景的三维信息，就像人类和许多其他类生物每天所做的那样。<br>DIP(Digital Image Processing):图像又称位图，是由扫描仪、摄像机等输入设备捕捉实际的画面产生的数字图像，是由像素点阵构成的位图。<br>AR(Augmented Reality):增强现实技术包含了多媒体、三维建模、实时视频显示及控制、多传感器融合、实时跟踪及注册、场景融合等新技术与新手段。增强现实提供了在一般情况下，不同于人类可以感知的信息。<br>主要注意的是图形和图像的区别,即矢量图和位图的区别，另外两个是一个研究方向，涵盖了CG,DIP,比如计算机视觉就涵盖了DIP，主要涉及图像输入和识别处理的问题,AR则需要应用CG来建立模型，属于输出的范畴。</p>
<h2 id="OpenGL"><a href="#OpenGL" class="headerlink" title="OpenGL"></a>OpenGL</h2><p>Open Graphics Library<br>OpenGL是一个开放的三维<strong>图形</strong>软件包，它独立于窗口系统和操作系统，以它为基础开发的应用程序可以十分方便地在各种平台间移植,像最近看到3d 的WebGl,就可以把JavaScript和OpenGL ES 2.0结合在一起，通过增加OpenGL ES 2.0的一个JavaScript绑定，WebGL可以为HTML5 Canvas提供硬件3D加速渲染，这样Web开发人员就可以借助系统显卡来在浏览器里更流畅地展示3D场景和模型了，还能创建复杂的导航和数据视觉化。<br>应用：游戏，3d绘图</p>
<h2 id="OpenCv"><a href="#OpenCv" class="headerlink" title="OpenCv"></a>OpenCv</h2><p>Open Source Computer Vision Library<br>OpenCV是一个基于（开源）发行的跨平台计算机视觉库，可以运行在Linux、Windows和Mac OS操作系统上。它轻量级而且高效——由一系列 C 函数和少量 C++ 类构成，同时提供了Python、Ruby、MATLAB等语言的接口，实现了<strong>图像处理</strong>和<strong>计算机视觉</strong>方面的很多通用算法.<br>应用：视频的降噪、运动物体的跟踪、目标（比如人脸）的识别，机器视觉，物体或动作识别。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这段时间准备开始毕设了，题目是研究生的导师给的，应该跟未来三年的研究方向有关，所以态度还是要有的，先搜集资料试了下水，跟我想象的有点不同，但是也蛮有意思的，还比较感兴趣，是基于深度学习的车型分类，题目不新，希望会有前辈的资料，在了解的过程中看到opencv这个东西，联想到OpenGL和前段时间看到的webgl,所以想记录下自己了解到的。
    
    </summary>
    
    
      <category term="图形" scheme="http://yoursite.com/tags/%E5%9B%BE%E5%BD%A2/"/>
    
      <category term="图像" scheme="http://yoursite.com/tags/%E5%9B%BE%E5%83%8F/"/>
    
      <category term="计算机视觉" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
  </entry>
  
  <entry>
    <title>canvas基础</title>
    <link href="http://yoursite.com/2016/01/09/canvas%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2016/01/09/canvas基础/</id>
    <published>2016-01-09T15:14:16.000Z</published>
    <updated>2016-01-09T15:24:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>获取绘制上下文时先检测方法<strong> 是否存在 </strong><br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="comment">(cxt.getContext)</span> &#123;</div><div class="line"><span class="comment">//</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>toDataURL()取得绘制元素的URL（将绘制的画布形成资源文件）</p>
<p>fillStyle strokeStyle 填充和描边<br>fillRect() stokeRect() clearRect() 填充矩形，画矩形，清除矩形区域（一般用来重置画布）<br>lineWidth 设置线宽</p>
<p><strong> 绘制路径 </strong><br>arc() arcTo() …</p>
<p><strong> 绘制文本 </strong><br>context.font = “”;<br>context.textAlign = “center”;<br>context.textBaseline = “middle”;<br>context.fillText(“12”, 100, 20);<br>文本过大，则通过方法测得大小后进行调整<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var fontSize = <span class="number">100</span><span class="comment">;</span></div><div class="line"><span class="built_in">context</span>.font = fontSize + <span class="string">"px Arial"</span><span class="comment">;</span></div><div class="line"><span class="built_in">context</span>.textAlign = <span class="string">"center"</span><span class="comment">;</span></div><div class="line"><span class="built_in">context</span>.textBaseline = <span class="string">"middle"</span><span class="comment">;</span></div><div class="line">while (<span class="built_in">context</span>.measureText(<span class="string">"Hello, world!"</span>).width &gt; <span class="number">140</span>) &#123;</div><div class="line">    fontSize--<span class="comment">;</span></div><div class="line">    <span class="built_in">context</span>.font = fontSize + <span class="string">"px Arial"</span><span class="comment">;</span></div><div class="line">&#125;</div><div class="line"><span class="built_in">context</span>.fillText(<span class="string">"Hello, world!"</span>, <span class="number">100</span>, <span class="number">20</span>)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p><strong> 变换 </strong><br>rotate 绕远点旋转<br>translate 移动原点坐标<br>scale 缩放图像<br>transform 直接修改变换矩阵<br>setTrabsform 将矩阵重置为默认状态再调用transform</p>
<p><strong> save方法 </strong>，调用后，所有设置压入堆栈，然后进行上下文设置，完成后再调用restore弹出设置信息，一级一级返回先前的设置</p>
<p><strong> 绘制图像 </strong> 可以将一副图像绘制到画布中，drawImage方法，但是绘制的图像不能来自其他域，否则会出错</p>
<p><strong> 阴影 </strong><br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">context</span>.<span class="keyword">shadowColor </span>= <span class="string">""</span><span class="comment">;</span></div><div class="line"><span class="built_in">context</span>.<span class="keyword">shadowOffsetX </span>= <span class="string">""</span><span class="comment">;</span></div><div class="line"><span class="built_in">context</span>.<span class="keyword">shadowOffsetY </span>= <span class="string">""</span><span class="comment">;</span></div><div class="line"><span class="built_in">context</span>.<span class="keyword">shadowBlur </span>= <span class="string">""</span><span class="comment">;//模糊像素</span></div></pre></td></tr></table></figure></p>
<p><strong> 渐变 </strong><br>创建径向渐变如下：<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.color = ctx.createRadialGradient(<span class="keyword">this</span>.x,<span class="keyword">this</span>.y,<span class="number">0</span>,<span class="keyword">this</span>.x,<span class="keyword">this</span>.y,<span class="keyword">this</span>.radius);</div><div class="line"><span class="keyword">this</span>.color.addColorStop(<span class="number">0</span>,<span class="keyword">this</span>.sColor);</div><div class="line"><span class="keyword">this</span>.color.addColorStop(<span class="number">1</span>,<span class="keyword">this</span>.eColor);</div><div class="line">ctx.fillStyle = <span class="keyword">this</span>.color;</div></pre></td></tr></table></figure></p>
<p>此外还可以创建线性渐变：createLinearGradient</p>
<p><strong> 模式 </strong><br>其实就是创建重复的图像<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">context.createPattern(<span class="selector-tag">img</span>,<span class="string">"repeat"</span>)<span class="comment">//第一个元素可以为video或canvas，第二个可以为repeat-x,repeat-y</span></div></pre></td></tr></table></figure></p>
<p><strong> 使用图像数据 </strong><br>获得图像的像素信息放在一个数组中，第零到第三个元素分别表示第一个像素的红，绿，蓝和透明度。以此类推<br>getImageData() putImageData()<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="title">var</span> canvas = document.getElementById(<span class="string">"mycanvas"</span>);</div><div class="line">    <span class="keyword">if</span> (canvas.getContext) &#123;</div><div class="line">        var context = canvas.getContext(<span class="string">"2d"</span>),</div><div class="line">            img = document.images[<span class="number">0</span>],</div><div class="line">            imgData, <span class="class"><span class="keyword">data</span>,</span></div><div class="line">            i, len, average, red,</div><div class="line">            green, blue, alpha;</div><div class="line"></div><div class="line">        context.drawImage(img, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">        imgData = context.getImageData(<span class="number">0</span>, <span class="number">0</span>, img.height, img.width);</div><div class="line">        <span class="class"><span class="keyword">data</span> = imgData.<span class="keyword">data</span>;</span></div><div class="line">        len = <span class="class"><span class="keyword">data</span>.length;</span></div><div class="line"></div><div class="line">        for (i=<span class="number">0</span>; i &lt; len; i+=<span class="number">4</span>) &#123;</div><div class="line">            red = <span class="class"><span class="keyword">data</span>[i];</span></div><div class="line">            green = <span class="class"><span class="keyword">data</span>[i+1];</span></div><div class="line">            blue = <span class="class"><span class="keyword">data</span>[i+2];</span></div><div class="line">            alpha = <span class="class"><span class="keyword">data</span>[i+3]</span></div><div class="line">            average = <span class="type">Math</span>.floor((red + green + blue)/<span class="number">3</span>)    ;</div><div class="line">            <span class="class"><span class="keyword">data</span>[i] = <span class="keyword">data</span>[i+1] = <span class="keyword">data</span>[i+2] = average;</span></div><div class="line">        &#125;</div><div class="line">        imgData.<span class="class"><span class="keyword">data</span> = <span class="keyword">data</span>;</span></div><div class="line">        context.putImageData(imgData, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>本地尝试会有跨域污染的问题</p>
<p><strong> 合成 </strong><br>应用到2d上下文中的属性<br>globalCompositionOperation,设置合成模式有十一种取值<br>globalAlpha设置全局透明度</p>
<p>WebGL  是针对 canvas画布的3D上下文。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;获取绘制上下文时先检测方法&lt;strong&gt; 是否存在 &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div 
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
      <category term="canvas" scheme="http://yoursite.com/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>你好，2016</title>
    <link href="http://yoursite.com/2015/12/31/%E4%BD%A0%E5%A5%BD%EF%BC%8C2016/"/>
    <id>http://yoursite.com/2015/12/31/你好，2016/</id>
    <published>2015-12-31T15:07:34.000Z</published>
    <updated>2016-01-01T02:03:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>年尾总想磨叽点啥，不然感觉对不起时光啊，以前总爱在自己的日记本上矫情，自己总是慢一拍的人，接受新事物的能力不算太强，因此很多古老的习惯都还改不掉。今天是12月31号，现在是晚上11：13，在家里的床上，感觉恍惚之间距离第一次躺在这个床上八年了，回来的时候一直在车上回想这一年的一些事情，看着汽车灯光撕开夜的黑色口子，两旁是冬季枯树在暗夜里的剪影<a id="more"></a>，觉得真的大了是一瞬间的事，于是更喜欢坐车了，嗯，内向的人内耗更多。<br>讲真一是想纪念一下过去的2015，二是过去的大学三年半，三是过去的二十岁，以前特别心心念念的很多重要时刻其实已经都过去了，只不过并没有什么可以深刻记忆的仪式感。所以用这样的方式希望能够记得久一些。首先通过我写在手机笔记里的几句以前不太懂，现在才悟出来的话讲下自己内心的感受吧。</p>
<blockquote>
<p>最长情的是陪伴</p>
</blockquote>
<p>其实以前也是一个很敏感的人，但是觉得还是少年时期的多愁善感占比更多一些，现在才对一些感情的理解更深了一些，我是一个很没有安全感的人，从小跟着爷爷奶奶长大，然而在我不甚懂事的时候他们就都过世了，所以这一直是我内心的一个遗憾，在我叛逆，孤僻的时候不曾陪伴他们，再回头的时候他们已经到我再也找不到的地方去了，人总是经历过几次死亡，才会感到完整，那个在面对生死手无寸铁的时刻，会让你倍加珍惜人生的每一天，身边的每一个人。所以，朋友也好，亲人也好，在身边才不会感觉孤单。</p>
<blockquote>
<p>不要轻易被他人的意见左右，你的人生是你自己的。</p>
</blockquote>
<p>这句话像句鸡汤，但是我为什么要写下来呢，因为鸡汤之所以能叫鸡汤，是因为里面确实熬过鸡！哈哈，刚上大三的时候有人跟我讲说你一定要选择一个方向然后术业专攻，然后当时很单纯，很迷信他的话，其实现在也没过多久就感觉他的话并不全对，每个人的情况都不同，哪有包治百病的万灵药，所有的事情都需要自己摸索，别人的意见只是参考方向，究竟怎么做还是要有自己的思考，其实看看这世界上不是专攻一个方向的人多到数不清，为什么那么早就把自己局限在一个框里呢。其次就是要把眼界放开，不要只盯着身旁的一小嘬人，因为如果一旦他们参考价值价值不大，也容易把自己困在框里。</p>
<blockquote>
<p>勇敢不是知道努力就会成功，而是即使知道努力了也不一定成功却还是不放弃。</p>
</blockquote>
<p>大学四年第一次感受到了持续不断的智商压制和出身压制，也破罐子破摔过，现在觉得那样太弱了，完全不符合我主观主角的气质，嗯，不能做一个那么弱的<strong>主角</strong>。</p>
<hr>
<p>前天跟新媒体的小伙伴们一起谈了谈旧年总结和新年愿景。过去的2015年最大的事情就是保了研，确定了未来三年的去向问题，然后决心学习了一门技术，明确了近期目标，独自去江浙沪逛了一圈，感觉还不错，然后吉他也稍微入了点门。<br>2016年上半年估计都会被毕设折磨，然后希望结束后能去趟台湾，有伴更好，没伴就对影成三人好了，也不会太寂寞。暑假希望能找个实习丰富下阅历，然后开始研究生生涯，带上我的宝贝吉他。<br>硬性目标是一年50本书（至少12本专业书籍），每本看完写书评，专业书做笔记，且要有代码实践。</p>
<p>未来的日子很长也很短，想要体验更多不一样的人生除了努力别无他法，加油Zoe。</p>
<p>就酱，明年见～</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;年尾总想磨叽点啥，不然感觉对不起时光啊，以前总爱在自己的日记本上矫情，自己总是慢一拍的人，接受新事物的能力不算太强，因此很多古老的习惯都还改不掉。今天是12月31号，现在是晚上11：13，在家里的床上，感觉恍惚之间距离第一次躺在这个床上八年了，回来的时候一直在车上回想这一年的一些事情，看着汽车灯光撕开夜的黑色口子，两旁是冬季枯树在暗夜里的剪影
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="年度总结" scheme="http://yoursite.com/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>从小红点说开</title>
    <link href="http://yoursite.com/2015/12/28/%E4%BB%8E%E5%B0%8F%E7%BA%A2%E7%82%B9%E8%AF%B4%E5%BC%80/"/>
    <id>http://yoursite.com/2015/12/28/从小红点说开/</id>
    <published>2015-12-28T05:46:52.000Z</published>
    <updated>2015-12-28T06:25:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>前几天做东西的时候后台问我网页上的消息提醒小红点能做吗？我发现没有这方面的经验，于是自己研究了一会，整理成这篇博客，服务器端与客户端保持通信的方法有<a id="more"></a>这样几种：长连接，轮询，和html5的新API web socket，下面就一一讲清楚。</p>
<h3 id="长连接"><a href="#长连接" class="headerlink" title="长连接"></a>长连接</h3><p> longpoll也叫流技术。<br> 目前 http 协议普遍使用的是 1.1 版本, 之前有个 1.0 版本, 两者之间的一个区别是 1.1 支持 http 长连接, 或者叫持久连接.1.0 不支持 http 长连接, 每次一个 http 请求响应后都关闭 tcp 连接, 下个 http 请求会重新建立 tcp 连接.<br> 所谓 http 长连接, 就是多个 http 请求共用一个 tcp 连接; 这样可以减少多次连接 http 请求导致 tcp 建立关闭所产生的时间消耗. http 1.1 中在请求头和相应头中用 connection字段标识是否是 http 长连接, connection: keep-alive, 表明是 http 长连接; connection:closed, 表明服务器关闭 tcp 连接<br> 与 connection 对应的一个字段是 keep-live, http 响应头中出现, 他的格式是 timeout=30, max=5, timeout 是两次 http 请求保持的时间(s), , max 是这个 tcp 连接最多为几个 http 请求重用。<br> 这种机制在并发比较大的情况下，对服务器端的资源是一个极大的考验。</p>
<h3 id="轮询"><a href="#轮询" class="headerlink" title="轮询"></a>轮询</h3><p>也叫ajax轮询或者短轮询，是客户端定时向服务器发送Ajax请求，服务器接到请求后马上返回响应信息并关闭连接，方法一般利用setTimeout或是setInterval定时请求，并返回最新数据，这无疑增加了服务器的负担，浪费了大量的资源。JSONP轮询基本上与HTTP轮询一样，不同之处则是JSONP可以发出跨域请求（不是在你的域内的请求）。</p>
<h3 id="长轮询"><a href="#长轮询" class="headerlink" title="长轮询"></a>长轮询</h3><p>也叫ajax长轮询，是一种阻塞模型，客户端向服务器发送Ajax请求，服务器接到请求后hold住连接，直到有新消息才返回响应信息并关闭连接，客户端处理完响应信息后再向服务器发送新的请求。但服务器hold连接会消耗资源，返回数据顺序无保证，难于管理维护。</p>
<h3 id="comet"><a href="#comet" class="headerlink" title="comet"></a>comet</h3><p>每个客户端始终都有一个向服务器端打开的通信链路。服务器端可以通过在事件到来时立即提交（完成）响应来把事件推给客户端，或者它甚至可以累积再连续发送。因为请求长时间保持打开的状态，故服务器端需要特别的功能来处理所有的这些长生存期请求。<br><strong>使用HTTP流的Comet：</strong><br>从技术上来讲，两种常见的流技术包括Forever Iframe（隐藏的IFrame），或是被用来在JavaScript中创建Ajax请求的XMLHttpRequest对象的多部分（multi-part）特性。<br> 1.在页面里嵌入一个隐蔵iframe，将这个隐蔵iframe的src属性设为对一个长连接的请求或是采用xhr请求，服务器端就能源源不断地往客户端输入数据。<br>缺点： 没有方法可用来实现可靠的错误处理或是跟踪连接的状态，因为所有的连接和数据都是由浏览器通过HTML标签来处理的，因此你没有办法知道连接何时在哪一端已被断开了。<br>2.第二种技术，更可靠一些，是XMLHttpRequest对象上使用某些浏览器（比如说Firefox）支持的multi-part标志。Ajax请求被发送给服务器端并保持打开状态，每次有事件到来时，一个多部分的响应就会通过这同一连接来写入。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xhr = $.ajaxSettings.xhr();</div><div class="line">xhr.multipart =<span class="literal">true</span>;</div><div class="line">xhr.open(<span class="string">'GET'</span>, <span class="string">'ajax'</span>, <span class="literal">true</span>);</div><div class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">　　	<span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;</div><div class="line">　　　　	processEvents($.parseJSON(xhr.responseText));</div><div class="line">　　	&#125;</div><div class="line">&#125;;</div><div class="line">xhr.send(<span class="literal">null</span>);</div></pre></td></tr></table></figure></p>
<p><strong>使用HTTP长轮询的Comet</strong><br>1.正如iframe一样，其目标是把script标签附加到页面上以让脚本执行。服务器端则会：挂起连接直到有事件发生，接着把脚本内容发送回浏览器，然后重新打开另一个script标签来获取下一个事件。<br>优点：因为是基于HTML标签的，所有这一技术非常容易实现，且可跨域工作（缺省情况下，XMLHttpRequest不允许向其他域或是子域发送请求）<br>缺点：类似于iframe技术，错误处理缺失，你不能获得连接的状态或是有干涉连接的能力。</p>
<ol>
<li>也是一种推荐的实现Comet的做法是打开一个到服务器端的Ajax请求然后等待响应。服务器端需要一些特定的功能来允许请求被挂起，只要一有事件发生， 服务器端就会在挂起的请求中送回响应并关闭该请求，完全就像是你关闭了servlet响应的输出流。然后客户端就会使用这一响应并打开一个新的到服务器端 的长生存期的Ajax请求.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">long_polling</span>(<span class="params"></span>) </span>&#123;</div><div class="line">　　$.getJSON(<span class="string">'ajax'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">events</span>) </span>&#123;</div><div class="line">　　　　	processEvents(events);</div><div class="line">　　　　	long_polling();</div><div class="line">　　	&#125;);</div><div class="line">&#125;</div><div class="line">long_polling();</div></pre></td></tr></table></figure>
</li>
</ol>
<hr>
<p><strong>但无论是轮询，长轮询和长连接，服务器端本质上都是处于被动状态，即客户端不发送请求，服务器端就无法响应的状态。但是web socket就不同了。</strong></p>
<hr>
<h3 id="web-socket"><a href="#web-socket" class="headerlink" title="web socket"></a>web socket</h3><p>WebSocket是为解决客户端与服务端实时通信而产生的技术。WebSocket启用双向的、全双工的通信信道。其本质是先通过HTTP/HTTPS协议进行握手后创建一个用于交换数据的TCP连接， 此后服务端与客户端通过此TCP连接进行实时通信。<br>WebSocket API最伟大之处在于服务器和客户端可以在给定的时间范围内的任意时刻，相互推送信息。在建立连接之后，服务器可以主动传送数据给客户端。<br>在支持WebSocket的浏览器中，在创建socket之后。可以通过onopen，onmessage，onclose即onerror四个事件实现对socket进行响应。</p>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>长轮询一般用在 web im, im 实时性要求高, http 长轮询的控制权一直在服务器端, 而数据是在服务器端的, 因此实时性高;<br>像新浪微薄的im, 朋友网的 im 以及 webQQ 都是用 http 长轮询实现的;<br>NodeJS 的异步机制貌似可以很好的处理 http 长轮询导致的服务器瓶颈问题, 这个有待研究.</p>
<p>http 短轮询一般用在实时性要求不高的地方, 比如新浪微薄的未读条数查询就是浏览器端每隔一段时间查询的.</p>
<h3 id="了解更多"><a href="#了解更多" class="headerlink" title="了解更多"></a>了解更多</h3><p>一个在使用jquery进行长连接的简单实例：<br><a href="http://www.cnblogs.com/vagerent/archive/2010/02/05/1664450.html" target="_blank" rel="external">http://www.cnblogs.com/vagerent/archive/2010/02/05/1664450.html</a><br>长连接与轮询的js实现：<br><a href="http://www.cnblogs.com/hoojo/p/longPolling_comet_jquery_iframe_ajax.html" target="_blank" rel="external">http://www.cnblogs.com/hoojo/p/longPolling_comet_jquery_iframe_ajax.html</a><br>comet:<br><a href="http://kb.cnblogs.com/page/112185/" target="_blank" rel="external">http://kb.cnblogs.com/page/112185/</a><br>web socket：<br><a href="http://www.itpub.net/thread-1373652-1-1.html###" target="_blank" rel="external">http://www.itpub.net/thread-1373652-1-1.html###</a><br><a href="http://my.oschina.net/u/1266171/blog/357488" target="_blank" rel="external">http://my.oschina.net/u/1266171/blog/357488</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天做东西的时候后台问我网页上的消息提醒小红点能做吗？我发现没有这方面的经验，于是自己研究了一会，整理成这篇博客，服务器端与客户端保持通信的方法有
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
      <category term="websocket" scheme="http://yoursite.com/tags/websocket/"/>
    
  </entry>
  
  <entry>
    <title>类型识别</title>
    <link href="http://yoursite.com/2015/12/18/%E7%B1%BB%E5%9E%8B%E8%AF%86%E5%88%AB/"/>
    <id>http://yoursite.com/2015/12/18/类型识别/</id>
    <published>2015-12-18T12:03:26.000Z</published>
    <updated>2015-12-28T13:57:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>归纳下常用的类型识别的几种方法：<br><a id="more"></a></p>
<ul>
<li>typeof</li>
<li>Object.prototype.toString</li>
<li>constructor</li>
<li><p>instanceof</p>
<h3 id="typeof："><a href="#typeof：" class="headerlink" title="typeof："></a>typeof：</h3></li>
<li><p>可以是标准类型（Null 除外）</p>
</li>
<li>不可识别具体的对象类型（Function 除外）</li>
</ul>
<h3 id="Object-prototype-toString："><a href="#Object-prototype-toString：" class="headerlink" title="Object.prototype.toString："></a>Object.prototype.toString：</h3><ul>
<li>可是识别标准类型及内置对象类型（例如，Object, Date, Array）</li>
<li>不能识别自定义对象类型</li>
</ul>
<h3 id="constructor："><a href="#constructor：" class="headerlink" title="constructor："></a>constructor：</h3><ul>
<li>可以识别标准类型（Undefined/Null 除外）</li>
<li>可识别内置对象类型</li>
<li>可识别自定义对象类型<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getConstructiorName</span>(<span class="params">obj</span>) </span>&#123;</div><div class="line">  	<span class="keyword">return</span> obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor.toString().match(<span class="regexp">/function\s*([^(]*)/</span>)[<span class="number">1</span>];</div><div class="line">&#125;</div><div class="line">getConstructiorName([]) === <span class="string">"Array"</span>; <span class="comment">// true</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="instanceof："><a href="#instanceof：" class="headerlink" title="instanceof："></a>instanceof：</h3><ul>
<li>不可判别原始类型</li>
<li>可判别内置对象类型</li>
<li>可判别自定义对象类型</li>
</ul>
<p>一般识别是否为函数和数字采用Object.prototype.toString的方法：<br>例如:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isArray</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(arr) === <span class="string">'[object Array]'</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isFunction</span>(<span class="params">fn</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(fn) === <span class="string">'[object Function]'</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//返回传递给他的任意对象的基类，如number，string等</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isClass</span>(<span class="params">obj</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (obj === <span class="literal">null</span>) <span class="keyword">return</span> <span class="string">"Null"</span>;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (obj === <span class="literal">undefined</span>) <span class="keyword">return</span> <span class="string">"Undefined"</span>;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(obj).slice(<span class="number">8</span>, <span class="number">-1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;归纳下常用的类型识别的几种方法：&lt;br&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>学习的一些规划</title>
    <link href="http://yoursite.com/2015/12/16/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%84%E5%88%92/"/>
    <id>http://yoursite.com/2015/12/16/前端学习的一些规划/</id>
    <published>2015-12-16T12:35:59.000Z</published>
    <updated>2017-03-05T09:50:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近几天接触到了很多之前不知道到前端知识点，觉得自己的技术真的堪称弱鸡，想想一个星期前的面试真的觉得好羞耻，不知者无畏吧，还以为自己学的不错，实际上在相同的时间内自己算是学的比较慢的那一拨<a id="more"></a>，花了时间在上面，却并没有得到超群的效果，还洋洋自得，所以写这篇文章，一是对自己近一年来学习的一个总结和回顾，二是明确自己未来的方向，作出合适的规划。<br>其实从2014年年末就开始接触有关的知识，看了一点相关的书，但是因为当时还在犹豫要不要做网页设计这一行（实际上当时接触网页设计也只有半年，但我感觉这个行业的情况我还是大致了解了），然后一直还在动交互设计师的念头，所以也好看了很多交互设计心理学的书，加上可能课业也比较重，所以当时并没有像现在这样想要真正进去这一行的决心，反而是一直处于迷茫和摸索的情况，然后2015年年初到3月份的时候才看了一点基础的 CSS3的知识，html属于完全摸索，并没有系统学习，javascript也只是了解语法，后面涉及函数DOM什么的更是无从谈起，但是当时看了点。<br>然后到了四月份的时候大家都在忙着找实习，所以觉得自己好像也应该出去锻炼锻炼，虽然是确定自己要读研的，但是因为加权也有一点点悬，所以还是抱着万一保研失败有路可退的心态去见识了一下，就投了两个公司的实习生，一个是新浪，投的是交互设计，二是腾讯，投的页面重构，这个就可以看的出来当时心绪还是不定的，不确定自己将来干什么，想做别的又缺乏专业指导，然后觉得自己大学四年就成了沉没成本，况且我还有读计算机研究生的打算。新浪的简历关都没过（过了才奇怪吧，作品集根本没有交互的），然后腾讯的页面重构基本上没有涉及技术，完了之后居然还到了二面，也是神奇，所以一直没有啪啪啪打脸的感觉。<br>然后是期间一直看书，但书看的再多还是弱鸡，到了六月底，学校有最后一个项目实训，没有去外地，留在武汉了，感觉有点遗憾，因为之前觉得自己技术太薄弱所以不敢出去，然后才发现其实自己还算可以的，毕竟读了点点书，比起一些完全没有代码能力的孩子还是好一点，然后跟室友组队决定做一个web应用，最后竟然独挑了前端的大梁，讲真这件事给我最大的启示就是，什么困难，不要怂，往上冲，不逼自己一把，自己永远是个畏畏缩缩的小白。也很感谢前端这个门槛低到令人发指的方向给了我勇气，然后当时第一个在项目中使用jquery和bootstrap，认识了插件是怎么一回事，虽然是一路百度然后问学弟，但是好歹还是一个人磨出来了，最后竟然拿了项目第一，最后就坚定了，无论将来怎么样，先把这个事干熟，这样有路可退，而且头一次从写代码中获得了成就感，这个真的非常重要。<br>然后暑假就准备保研考试，将c语法重新过了一遍，同时完了看了很多视频和书，大致把这个方向入门的技能略略捋了一捋。包括html css和html5跟css3的一些区别和常用框架都眼熟了一下，然后看了一点ajax 的书，虽然一直没用上，对于整站开发有了一点了解，在保研结果下来之前一直在看大巧不工前端开发，html移动开发，响应式web开发什么的周边书籍并整理到笔记本上，然后保研成功就玩了一段时间，此后也投了几家公司，出于不明原因被刷。<br>到现在12月了，感觉一直没什么大的收获，前一次去面试实习生的时候还略自满，觉得自己懂点设计，然后问到dom事件方面的知识就傻了，完全没有概念，到今天把这些知识补完才发现看了与会的差别真是天壤。到从11月27号看js高程红宝书，把几章知识通读了一遍，才明白之前看的一些代码为什么那样写，然后把整个知识体系梳理了一遍，感觉真的收获很大，有点后悔为什么不早点看这本书，不然前几个月就不会荒废过去了。<br>还有一点 值得说的是，十一月接了个简单的外包，虽然简单，但是感觉还是把别人坑了。感觉这个东西以后肯定会烂尾，不过于我来讲是没什么损失的，我也练了手，顺便还拿了点钱。不过做了才知道有什么不足嘛，下次js的文件调用什么的要多想想了，然后要开始积累自己的js函数库，现在看高程觉得自己以前写的那些都是什么东西啊，果真我当时还没入门，不过没有那些东西可能我也静不下心来看高程，实践跟理论结合很重要啊。</p>
<p>回忆就到这里。讲一讲今后的规划。</p>
<p>前几天看到那个妹子的主页才知道其实自己属于很弱且不自知的那一种人。看到她的整个规划觉得真的很相似，本科研究生一起读了（，职业规划做前端，手上两个漂亮的实习经历，也有设计经验，有拿的出手的作品。大学四年我在犹犹豫豫里错过多少可以好好锻炼自己的机会，所以，对于我来讲，days are numbered。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近几天接触到了很多之前不知道到前端知识点，觉得自己的技术真的堪称弱鸡，想想一个星期前的面试真的觉得好羞耻，不知者无畏吧，还以为自己学的不错，实际上在相同的时间内自己算是学的比较慢的那一拨
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
